

#pragma once

#ifndef GO_MOC_8ba275_H
#define GO_MOC_8ba275_H

#include <stdint.h>

#ifdef __cplusplus
class HistoryModel8ba275;
void HistoryModel8ba275_HistoryModel8ba275_QRegisterMetaTypes();
class TransactionDetails8ba275;
void TransactionDetails8ba275_TransactionDetails8ba275_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
void HistoryModel8ba275_ConnectAddTransaction(void* ptr);
void HistoryModel8ba275_DisconnectAddTransaction(void* ptr);
void HistoryModel8ba275_AddTransaction(void* ptr, void* transaction);
void HistoryModel8ba275_ConnectRemoveTransaction(void* ptr);
void HistoryModel8ba275_DisconnectRemoveTransaction(void* ptr);
void HistoryModel8ba275_RemoveTransaction(void* ptr, int index);
struct Moc_PackedList HistoryModel8ba275_Roles(void* ptr);
struct Moc_PackedList HistoryModel8ba275_RolesDefault(void* ptr);
void HistoryModel8ba275_SetRoles(void* ptr, void* roles);
void HistoryModel8ba275_SetRolesDefault(void* ptr, void* roles);
void HistoryModel8ba275_ConnectRolesChanged(void* ptr);
void HistoryModel8ba275_DisconnectRolesChanged(void* ptr);
void HistoryModel8ba275_RolesChanged(void* ptr, void* roles);
struct Moc_PackedList HistoryModel8ba275_Transactions(void* ptr);
struct Moc_PackedList HistoryModel8ba275_TransactionsDefault(void* ptr);
void HistoryModel8ba275_SetTransactions(void* ptr, void* transactions);
void HistoryModel8ba275_SetTransactionsDefault(void* ptr, void* transactions);
void HistoryModel8ba275_ConnectTransactionsChanged(void* ptr);
void HistoryModel8ba275_DisconnectTransactionsChanged(void* ptr);
void HistoryModel8ba275_TransactionsChanged(void* ptr, void* transactions);
int HistoryModel8ba275_HistoryModel8ba275_QRegisterMetaType();
int HistoryModel8ba275_HistoryModel8ba275_QRegisterMetaType2(char* typeName);
int HistoryModel8ba275_HistoryModel8ba275_QmlRegisterType();
int HistoryModel8ba275_HistoryModel8ba275_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int HistoryModel8ba275_____itemData_keyList_atList(void* ptr, int i);
void HistoryModel8ba275_____itemData_keyList_setList(void* ptr, int i);
void* HistoryModel8ba275_____itemData_keyList_newList(void* ptr);
int HistoryModel8ba275_____roleNames_keyList_atList(void* ptr, int i);
void HistoryModel8ba275_____roleNames_keyList_setList(void* ptr, int i);
void* HistoryModel8ba275_____roleNames_keyList_newList(void* ptr);
int HistoryModel8ba275_____setItemData_roles_keyList_atList(void* ptr, int i);
void HistoryModel8ba275_____setItemData_roles_keyList_setList(void* ptr, int i);
void* HistoryModel8ba275_____setItemData_roles_keyList_newList(void* ptr);
void* HistoryModel8ba275___changePersistentIndexList_from_atList(void* ptr, int i);
void HistoryModel8ba275___changePersistentIndexList_from_setList(void* ptr, void* i);
void* HistoryModel8ba275___changePersistentIndexList_from_newList(void* ptr);
void* HistoryModel8ba275___changePersistentIndexList_to_atList(void* ptr, int i);
void HistoryModel8ba275___changePersistentIndexList_to_setList(void* ptr, void* i);
void* HistoryModel8ba275___changePersistentIndexList_to_newList(void* ptr);
int HistoryModel8ba275___dataChanged_roles_atList(void* ptr, int i);
void HistoryModel8ba275___dataChanged_roles_setList(void* ptr, int i);
void* HistoryModel8ba275___dataChanged_roles_newList(void* ptr);
void* HistoryModel8ba275___itemData_atList(void* ptr, int v, int i);
void HistoryModel8ba275___itemData_setList(void* ptr, int key, void* i);
void* HistoryModel8ba275___itemData_newList(void* ptr);
struct Moc_PackedList HistoryModel8ba275___itemData_keyList(void* ptr);
void* HistoryModel8ba275___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void HistoryModel8ba275___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* HistoryModel8ba275___layoutAboutToBeChanged_parents_newList(void* ptr);
void* HistoryModel8ba275___layoutChanged_parents_atList(void* ptr, int i);
void HistoryModel8ba275___layoutChanged_parents_setList(void* ptr, void* i);
void* HistoryModel8ba275___layoutChanged_parents_newList(void* ptr);
void* HistoryModel8ba275___match_atList(void* ptr, int i);
void HistoryModel8ba275___match_setList(void* ptr, void* i);
void* HistoryModel8ba275___match_newList(void* ptr);
void* HistoryModel8ba275___mimeData_indexes_atList(void* ptr, int i);
void HistoryModel8ba275___mimeData_indexes_setList(void* ptr, void* i);
void* HistoryModel8ba275___mimeData_indexes_newList(void* ptr);
void* HistoryModel8ba275___persistentIndexList_atList(void* ptr, int i);
void HistoryModel8ba275___persistentIndexList_setList(void* ptr, void* i);
void* HistoryModel8ba275___persistentIndexList_newList(void* ptr);
void* HistoryModel8ba275___roleNames_atList(void* ptr, int v, int i);
void HistoryModel8ba275___roleNames_setList(void* ptr, int key, void* i);
void* HistoryModel8ba275___roleNames_newList(void* ptr);
struct Moc_PackedList HistoryModel8ba275___roleNames_keyList(void* ptr);
void* HistoryModel8ba275___setItemData_roles_atList(void* ptr, int v, int i);
void HistoryModel8ba275___setItemData_roles_setList(void* ptr, int key, void* i);
void* HistoryModel8ba275___setItemData_roles_newList(void* ptr);
struct Moc_PackedList HistoryModel8ba275___setItemData_roles_keyList(void* ptr);
int HistoryModel8ba275_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void HistoryModel8ba275_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* HistoryModel8ba275_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int HistoryModel8ba275_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void HistoryModel8ba275_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* HistoryModel8ba275_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* HistoryModel8ba275___children_atList(void* ptr, int i);
void HistoryModel8ba275___children_setList(void* ptr, void* i);
void* HistoryModel8ba275___children_newList(void* ptr);
void* HistoryModel8ba275___dynamicPropertyNames_atList(void* ptr, int i);
void HistoryModel8ba275___dynamicPropertyNames_setList(void* ptr, void* i);
void* HistoryModel8ba275___dynamicPropertyNames_newList(void* ptr);
void* HistoryModel8ba275___findChildren_atList(void* ptr, int i);
void HistoryModel8ba275___findChildren_setList(void* ptr, void* i);
void* HistoryModel8ba275___findChildren_newList(void* ptr);
void* HistoryModel8ba275___findChildren_atList3(void* ptr, int i);
void HistoryModel8ba275___findChildren_setList3(void* ptr, void* i);
void* HistoryModel8ba275___findChildren_newList3(void* ptr);
void* HistoryModel8ba275___qFindChildren_atList2(void* ptr, int i);
void HistoryModel8ba275___qFindChildren_setList2(void* ptr, void* i);
void* HistoryModel8ba275___qFindChildren_newList2(void* ptr);
void* HistoryModel8ba275___roles_atList(void* ptr, int v, int i);
void HistoryModel8ba275___roles_setList(void* ptr, int key, void* i);
void* HistoryModel8ba275___roles_newList(void* ptr);
struct Moc_PackedList HistoryModel8ba275___roles_keyList(void* ptr);
void* HistoryModel8ba275___setRoles_roles_atList(void* ptr, int v, int i);
void HistoryModel8ba275___setRoles_roles_setList(void* ptr, int key, void* i);
void* HistoryModel8ba275___setRoles_roles_newList(void* ptr);
struct Moc_PackedList HistoryModel8ba275___setRoles_roles_keyList(void* ptr);
void* HistoryModel8ba275___rolesChanged_roles_atList(void* ptr, int v, int i);
void HistoryModel8ba275___rolesChanged_roles_setList(void* ptr, int key, void* i);
void* HistoryModel8ba275___rolesChanged_roles_newList(void* ptr);
struct Moc_PackedList HistoryModel8ba275___rolesChanged_roles_keyList(void* ptr);
void* HistoryModel8ba275___transactions_atList(void* ptr, int i);
void HistoryModel8ba275___transactions_setList(void* ptr, void* i);
void* HistoryModel8ba275___transactions_newList(void* ptr);
void* HistoryModel8ba275___setTransactions_transactions_atList(void* ptr, int i);
void HistoryModel8ba275___setTransactions_transactions_setList(void* ptr, void* i);
void* HistoryModel8ba275___setTransactions_transactions_newList(void* ptr);
void* HistoryModel8ba275___transactionsChanged_transactions_atList(void* ptr, int i);
void HistoryModel8ba275___transactionsChanged_transactions_setList(void* ptr, void* i);
void* HistoryModel8ba275___transactionsChanged_transactions_newList(void* ptr);
int HistoryModel8ba275_____roles_keyList_atList(void* ptr, int i);
void HistoryModel8ba275_____roles_keyList_setList(void* ptr, int i);
void* HistoryModel8ba275_____roles_keyList_newList(void* ptr);
int HistoryModel8ba275_____setRoles_roles_keyList_atList(void* ptr, int i);
void HistoryModel8ba275_____setRoles_roles_keyList_setList(void* ptr, int i);
void* HistoryModel8ba275_____setRoles_roles_keyList_newList(void* ptr);
int HistoryModel8ba275_____rolesChanged_roles_keyList_atList(void* ptr, int i);
void HistoryModel8ba275_____rolesChanged_roles_keyList_setList(void* ptr, int i);
void* HistoryModel8ba275_____rolesChanged_roles_keyList_newList(void* ptr);
void* HistoryModel8ba275_NewHistoryModel(void* parent);
void HistoryModel8ba275_DestroyHistoryModel(void* ptr);
void HistoryModel8ba275_DestroyHistoryModelDefault(void* ptr);
char HistoryModel8ba275_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long HistoryModel8ba275_FlagsDefault(void* ptr, void* index);
void* HistoryModel8ba275_IndexDefault(void* ptr, int row, int column, void* parent);
void* HistoryModel8ba275_SiblingDefault(void* ptr, int row, int column, void* idx);
void* HistoryModel8ba275_BuddyDefault(void* ptr, void* index);
char HistoryModel8ba275_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char HistoryModel8ba275_CanFetchMoreDefault(void* ptr, void* parent);
int HistoryModel8ba275_ColumnCountDefault(void* ptr, void* parent);
void* HistoryModel8ba275_DataDefault(void* ptr, void* index, int role);
void HistoryModel8ba275_FetchMoreDefault(void* ptr, void* parent);
char HistoryModel8ba275_HasChildrenDefault(void* ptr, void* parent);
void* HistoryModel8ba275_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char HistoryModel8ba275_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char HistoryModel8ba275_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList HistoryModel8ba275_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList HistoryModel8ba275_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* HistoryModel8ba275_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString HistoryModel8ba275_MimeTypesDefault(void* ptr);
char HistoryModel8ba275_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char HistoryModel8ba275_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* HistoryModel8ba275_ParentDefault(void* ptr, void* index);
char HistoryModel8ba275_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char HistoryModel8ba275_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void HistoryModel8ba275_ResetInternalDataDefault(void* ptr);
void HistoryModel8ba275_RevertDefault(void* ptr);
struct Moc_PackedList HistoryModel8ba275_RoleNamesDefault(void* ptr);
int HistoryModel8ba275_RowCountDefault(void* ptr, void* parent);
char HistoryModel8ba275_SetDataDefault(void* ptr, void* index, void* value, int role);
char HistoryModel8ba275_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char HistoryModel8ba275_SetItemDataDefault(void* ptr, void* index, void* roles);
void HistoryModel8ba275_SortDefault(void* ptr, int column, long long order);
void* HistoryModel8ba275_SpanDefault(void* ptr, void* index);
char HistoryModel8ba275_SubmitDefault(void* ptr);
long long HistoryModel8ba275_SupportedDragActionsDefault(void* ptr);
long long HistoryModel8ba275_SupportedDropActionsDefault(void* ptr);
void HistoryModel8ba275_ChildEventDefault(void* ptr, void* event);
void HistoryModel8ba275_ConnectNotifyDefault(void* ptr, void* sign);
void HistoryModel8ba275_CustomEventDefault(void* ptr, void* event);
void HistoryModel8ba275_DeleteLaterDefault(void* ptr);
void HistoryModel8ba275_DisconnectNotifyDefault(void* ptr, void* sign);
char HistoryModel8ba275_EventDefault(void* ptr, void* e);
char HistoryModel8ba275_EventFilterDefault(void* ptr, void* watched, void* event);
void HistoryModel8ba275_TimerEventDefault(void* ptr, void* event);
void* TransactionDetails8ba275_Date(void* ptr);
void* TransactionDetails8ba275_DateDefault(void* ptr);
void TransactionDetails8ba275_SetDate(void* ptr, void* date);
void TransactionDetails8ba275_SetDateDefault(void* ptr, void* date);
void TransactionDetails8ba275_ConnectDateChanged(void* ptr);
void TransactionDetails8ba275_DisconnectDateChanged(void* ptr);
void TransactionDetails8ba275_DateChanged(void* ptr, void* date);
int TransactionDetails8ba275_Status(void* ptr);
int TransactionDetails8ba275_StatusDefault(void* ptr);
void TransactionDetails8ba275_SetStatus(void* ptr, int status);
void TransactionDetails8ba275_SetStatusDefault(void* ptr, int status);
void TransactionDetails8ba275_ConnectStatusChanged(void* ptr);
void TransactionDetails8ba275_DisconnectStatusChanged(void* ptr);
void TransactionDetails8ba275_StatusChanged(void* ptr, int status);
int TransactionDetails8ba275_Type(void* ptr);
int TransactionDetails8ba275_TypeDefault(void* ptr);
void TransactionDetails8ba275_SetType(void* ptr, int ty);
void TransactionDetails8ba275_SetTypeDefault(void* ptr, int ty);
void TransactionDetails8ba275_ConnectTypeChanged(void* ptr);
void TransactionDetails8ba275_DisconnectTypeChanged(void* ptr);
void TransactionDetails8ba275_TypeChanged(void* ptr, int ty);
int TransactionDetails8ba275_Amount(void* ptr);
int TransactionDetails8ba275_AmountDefault(void* ptr);
void TransactionDetails8ba275_SetAmount(void* ptr, int amount);
void TransactionDetails8ba275_SetAmountDefault(void* ptr, int amount);
void TransactionDetails8ba275_ConnectAmountChanged(void* ptr);
void TransactionDetails8ba275_DisconnectAmountChanged(void* ptr);
void TransactionDetails8ba275_AmountChanged(void* ptr, int amount);
int TransactionDetails8ba275_HoursReceived(void* ptr);
int TransactionDetails8ba275_HoursReceivedDefault(void* ptr);
void TransactionDetails8ba275_SetHoursReceived(void* ptr, int hoursReceived);
void TransactionDetails8ba275_SetHoursReceivedDefault(void* ptr, int hoursReceived);
void TransactionDetails8ba275_ConnectHoursReceivedChanged(void* ptr);
void TransactionDetails8ba275_DisconnectHoursReceivedChanged(void* ptr);
void TransactionDetails8ba275_HoursReceivedChanged(void* ptr, int hoursReceived);
int TransactionDetails8ba275_HoursBurned(void* ptr);
int TransactionDetails8ba275_HoursBurnedDefault(void* ptr);
void TransactionDetails8ba275_SetHoursBurned(void* ptr, int hoursBurned);
void TransactionDetails8ba275_SetHoursBurnedDefault(void* ptr, int hoursBurned);
void TransactionDetails8ba275_ConnectHoursBurnedChanged(void* ptr);
void TransactionDetails8ba275_DisconnectHoursBurnedChanged(void* ptr);
void TransactionDetails8ba275_HoursBurnedChanged(void* ptr, int hoursBurned);
struct Moc_PackedString TransactionDetails8ba275_TransactionID(void* ptr);
struct Moc_PackedString TransactionDetails8ba275_TransactionIDDefault(void* ptr);
void TransactionDetails8ba275_SetTransactionID(void* ptr, struct Moc_PackedString transactionID);
void TransactionDetails8ba275_SetTransactionIDDefault(void* ptr, struct Moc_PackedString transactionID);
void TransactionDetails8ba275_ConnectTransactionIDChanged(void* ptr);
void TransactionDetails8ba275_DisconnectTransactionIDChanged(void* ptr);
void TransactionDetails8ba275_TransactionIDChanged(void* ptr, struct Moc_PackedString transactionID);
struct Moc_PackedString TransactionDetails8ba275_SentAddress(void* ptr);
struct Moc_PackedString TransactionDetails8ba275_SentAddressDefault(void* ptr);
void TransactionDetails8ba275_SetSentAddress(void* ptr, struct Moc_PackedString sentAddress);
void TransactionDetails8ba275_SetSentAddressDefault(void* ptr, struct Moc_PackedString sentAddress);
void TransactionDetails8ba275_ConnectSentAddressChanged(void* ptr);
void TransactionDetails8ba275_DisconnectSentAddressChanged(void* ptr);
void TransactionDetails8ba275_SentAddressChanged(void* ptr, struct Moc_PackedString sentAddress);
struct Moc_PackedString TransactionDetails8ba275_ReceivedAddress(void* ptr);
struct Moc_PackedString TransactionDetails8ba275_ReceivedAddressDefault(void* ptr);
void TransactionDetails8ba275_SetReceivedAddress(void* ptr, struct Moc_PackedString receivedAddress);
void TransactionDetails8ba275_SetReceivedAddressDefault(void* ptr, struct Moc_PackedString receivedAddress);
void TransactionDetails8ba275_ConnectReceivedAddressChanged(void* ptr);
void TransactionDetails8ba275_DisconnectReceivedAddressChanged(void* ptr);
void TransactionDetails8ba275_ReceivedAddressChanged(void* ptr, struct Moc_PackedString receivedAddress);
int TransactionDetails8ba275_TransactionDetails8ba275_QRegisterMetaType();
int TransactionDetails8ba275_TransactionDetails8ba275_QRegisterMetaType2(char* typeName);
int TransactionDetails8ba275_TransactionDetails8ba275_QmlRegisterType();
int TransactionDetails8ba275_TransactionDetails8ba275_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* TransactionDetails8ba275___children_atList(void* ptr, int i);
void TransactionDetails8ba275___children_setList(void* ptr, void* i);
void* TransactionDetails8ba275___children_newList(void* ptr);
void* TransactionDetails8ba275___dynamicPropertyNames_atList(void* ptr, int i);
void TransactionDetails8ba275___dynamicPropertyNames_setList(void* ptr, void* i);
void* TransactionDetails8ba275___dynamicPropertyNames_newList(void* ptr);
void* TransactionDetails8ba275___findChildren_atList(void* ptr, int i);
void TransactionDetails8ba275___findChildren_setList(void* ptr, void* i);
void* TransactionDetails8ba275___findChildren_newList(void* ptr);
void* TransactionDetails8ba275___findChildren_atList3(void* ptr, int i);
void TransactionDetails8ba275___findChildren_setList3(void* ptr, void* i);
void* TransactionDetails8ba275___findChildren_newList3(void* ptr);
void* TransactionDetails8ba275___qFindChildren_atList2(void* ptr, int i);
void TransactionDetails8ba275___qFindChildren_setList2(void* ptr, void* i);
void* TransactionDetails8ba275___qFindChildren_newList2(void* ptr);
void* TransactionDetails8ba275_NewTransactionDetails(void* parent);
void TransactionDetails8ba275_DestroyTransactionDetails(void* ptr);
void TransactionDetails8ba275_DestroyTransactionDetailsDefault(void* ptr);
void TransactionDetails8ba275_ChildEventDefault(void* ptr, void* event);
void TransactionDetails8ba275_ConnectNotifyDefault(void* ptr, void* sign);
void TransactionDetails8ba275_CustomEventDefault(void* ptr, void* event);
void TransactionDetails8ba275_DeleteLaterDefault(void* ptr);
void TransactionDetails8ba275_DisconnectNotifyDefault(void* ptr, void* sign);
char TransactionDetails8ba275_EventDefault(void* ptr, void* e);
char TransactionDetails8ba275_EventFilterDefault(void* ptr, void* watched, void* event);
void TransactionDetails8ba275_TimerEventDefault(void* ptr, void* event);

#ifdef __cplusplus
}
#endif

#endif