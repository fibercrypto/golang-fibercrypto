

#pragma once

#ifndef GO_MOC_baab1e_H
#define GO_MOC_baab1e_H

#include <stdint.h>

#ifdef __cplusplus
class AddressesModelbaab1e;
void AddressesModelbaab1e_AddressesModelbaab1e_QRegisterMetaTypes();
class QAddressbaab1e;
void QAddressbaab1e_QAddressbaab1e_QRegisterMetaTypes();
class QWalletbaab1e;
void QWalletbaab1e_QWalletbaab1e_QRegisterMetaTypes();
class WalletModelbaab1e;
void WalletModelbaab1e_WalletModelbaab1e_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
void WalletModelbaab1e_AddWallet(void* ptr, void* v0);
void WalletModelbaab1e_EditWallet(void* ptr, int row, struct Moc_PackedString name, char encryptionEnabled, int sky, int coinHours);
void WalletModelbaab1e_RemoveWallet(void* ptr, int row);
void WalletModelbaab1e_LoadModel(void* ptr);
struct Moc_PackedList WalletModelbaab1e_Roles(void* ptr);
struct Moc_PackedList WalletModelbaab1e_RolesDefault(void* ptr);
void WalletModelbaab1e_SetRoles(void* ptr, void* roles);
void WalletModelbaab1e_SetRolesDefault(void* ptr, void* roles);
void WalletModelbaab1e_ConnectRolesChanged(void* ptr);
void WalletModelbaab1e_DisconnectRolesChanged(void* ptr);
void WalletModelbaab1e_RolesChanged(void* ptr, void* roles);
struct Moc_PackedList WalletModelbaab1e_Wallets(void* ptr);
struct Moc_PackedList WalletModelbaab1e_WalletsDefault(void* ptr);
void WalletModelbaab1e_SetWallets(void* ptr, void* wallets);
void WalletModelbaab1e_SetWalletsDefault(void* ptr, void* wallets);
void WalletModelbaab1e_ConnectWalletsChanged(void* ptr);
void WalletModelbaab1e_DisconnectWalletsChanged(void* ptr);
void WalletModelbaab1e_WalletsChanged(void* ptr, void* wallets);
int WalletModelbaab1e_WalletModelbaab1e_QRegisterMetaType();
int WalletModelbaab1e_WalletModelbaab1e_QRegisterMetaType2(char* typeName);
int WalletModelbaab1e_WalletModelbaab1e_QmlRegisterType();
int WalletModelbaab1e_WalletModelbaab1e_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int WalletModelbaab1e_____itemData_keyList_atList(void* ptr, int i);
void WalletModelbaab1e_____itemData_keyList_setList(void* ptr, int i);
void* WalletModelbaab1e_____itemData_keyList_newList(void* ptr);
int WalletModelbaab1e_____roleNames_keyList_atList(void* ptr, int i);
void WalletModelbaab1e_____roleNames_keyList_setList(void* ptr, int i);
void* WalletModelbaab1e_____roleNames_keyList_newList(void* ptr);
int WalletModelbaab1e_____setItemData_roles_keyList_atList(void* ptr, int i);
void WalletModelbaab1e_____setItemData_roles_keyList_setList(void* ptr, int i);
void* WalletModelbaab1e_____setItemData_roles_keyList_newList(void* ptr);
void* WalletModelbaab1e___changePersistentIndexList_from_atList(void* ptr, int i);
void WalletModelbaab1e___changePersistentIndexList_from_setList(void* ptr, void* i);
void* WalletModelbaab1e___changePersistentIndexList_from_newList(void* ptr);
void* WalletModelbaab1e___changePersistentIndexList_to_atList(void* ptr, int i);
void WalletModelbaab1e___changePersistentIndexList_to_setList(void* ptr, void* i);
void* WalletModelbaab1e___changePersistentIndexList_to_newList(void* ptr);
int WalletModelbaab1e___dataChanged_roles_atList(void* ptr, int i);
void WalletModelbaab1e___dataChanged_roles_setList(void* ptr, int i);
void* WalletModelbaab1e___dataChanged_roles_newList(void* ptr);
void* WalletModelbaab1e___itemData_atList(void* ptr, int v, int i);
void WalletModelbaab1e___itemData_setList(void* ptr, int key, void* i);
void* WalletModelbaab1e___itemData_newList(void* ptr);
struct Moc_PackedList WalletModelbaab1e___itemData_keyList(void* ptr);
void* WalletModelbaab1e___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void WalletModelbaab1e___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* WalletModelbaab1e___layoutAboutToBeChanged_parents_newList(void* ptr);
void* WalletModelbaab1e___layoutChanged_parents_atList(void* ptr, int i);
void WalletModelbaab1e___layoutChanged_parents_setList(void* ptr, void* i);
void* WalletModelbaab1e___layoutChanged_parents_newList(void* ptr);
void* WalletModelbaab1e___match_atList(void* ptr, int i);
void WalletModelbaab1e___match_setList(void* ptr, void* i);
void* WalletModelbaab1e___match_newList(void* ptr);
void* WalletModelbaab1e___mimeData_indexes_atList(void* ptr, int i);
void WalletModelbaab1e___mimeData_indexes_setList(void* ptr, void* i);
void* WalletModelbaab1e___mimeData_indexes_newList(void* ptr);
void* WalletModelbaab1e___persistentIndexList_atList(void* ptr, int i);
void WalletModelbaab1e___persistentIndexList_setList(void* ptr, void* i);
void* WalletModelbaab1e___persistentIndexList_newList(void* ptr);
void* WalletModelbaab1e___roleNames_atList(void* ptr, int v, int i);
void WalletModelbaab1e___roleNames_setList(void* ptr, int key, void* i);
void* WalletModelbaab1e___roleNames_newList(void* ptr);
struct Moc_PackedList WalletModelbaab1e___roleNames_keyList(void* ptr);
void* WalletModelbaab1e___setItemData_roles_atList(void* ptr, int v, int i);
void WalletModelbaab1e___setItemData_roles_setList(void* ptr, int key, void* i);
void* WalletModelbaab1e___setItemData_roles_newList(void* ptr);
struct Moc_PackedList WalletModelbaab1e___setItemData_roles_keyList(void* ptr);
int WalletModelbaab1e_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void WalletModelbaab1e_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* WalletModelbaab1e_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int WalletModelbaab1e_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void WalletModelbaab1e_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* WalletModelbaab1e_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* WalletModelbaab1e___children_atList(void* ptr, int i);
void WalletModelbaab1e___children_setList(void* ptr, void* i);
void* WalletModelbaab1e___children_newList(void* ptr);
void* WalletModelbaab1e___dynamicPropertyNames_atList(void* ptr, int i);
void WalletModelbaab1e___dynamicPropertyNames_setList(void* ptr, void* i);
void* WalletModelbaab1e___dynamicPropertyNames_newList(void* ptr);
void* WalletModelbaab1e___findChildren_atList(void* ptr, int i);
void WalletModelbaab1e___findChildren_setList(void* ptr, void* i);
void* WalletModelbaab1e___findChildren_newList(void* ptr);
void* WalletModelbaab1e___findChildren_atList3(void* ptr, int i);
void WalletModelbaab1e___findChildren_setList3(void* ptr, void* i);
void* WalletModelbaab1e___findChildren_newList3(void* ptr);
void* WalletModelbaab1e___qFindChildren_atList2(void* ptr, int i);
void WalletModelbaab1e___qFindChildren_setList2(void* ptr, void* i);
void* WalletModelbaab1e___qFindChildren_newList2(void* ptr);
void* WalletModelbaab1e___roles_atList(void* ptr, int v, int i);
void WalletModelbaab1e___roles_setList(void* ptr, int key, void* i);
void* WalletModelbaab1e___roles_newList(void* ptr);
struct Moc_PackedList WalletModelbaab1e___roles_keyList(void* ptr);
void* WalletModelbaab1e___setRoles_roles_atList(void* ptr, int v, int i);
void WalletModelbaab1e___setRoles_roles_setList(void* ptr, int key, void* i);
void* WalletModelbaab1e___setRoles_roles_newList(void* ptr);
struct Moc_PackedList WalletModelbaab1e___setRoles_roles_keyList(void* ptr);
void* WalletModelbaab1e___rolesChanged_roles_atList(void* ptr, int v, int i);
void WalletModelbaab1e___rolesChanged_roles_setList(void* ptr, int key, void* i);
void* WalletModelbaab1e___rolesChanged_roles_newList(void* ptr);
struct Moc_PackedList WalletModelbaab1e___rolesChanged_roles_keyList(void* ptr);
void* WalletModelbaab1e___wallets_atList(void* ptr, int i);
void WalletModelbaab1e___wallets_setList(void* ptr, void* i);
void* WalletModelbaab1e___wallets_newList(void* ptr);
void* WalletModelbaab1e___setWallets_wallets_atList(void* ptr, int i);
void WalletModelbaab1e___setWallets_wallets_setList(void* ptr, void* i);
void* WalletModelbaab1e___setWallets_wallets_newList(void* ptr);
void* WalletModelbaab1e___walletsChanged_wallets_atList(void* ptr, int i);
void WalletModelbaab1e___walletsChanged_wallets_setList(void* ptr, void* i);
void* WalletModelbaab1e___walletsChanged_wallets_newList(void* ptr);
int WalletModelbaab1e_____roles_keyList_atList(void* ptr, int i);
void WalletModelbaab1e_____roles_keyList_setList(void* ptr, int i);
void* WalletModelbaab1e_____roles_keyList_newList(void* ptr);
int WalletModelbaab1e_____setRoles_roles_keyList_atList(void* ptr, int i);
void WalletModelbaab1e_____setRoles_roles_keyList_setList(void* ptr, int i);
void* WalletModelbaab1e_____setRoles_roles_keyList_newList(void* ptr);
int WalletModelbaab1e_____rolesChanged_roles_keyList_atList(void* ptr, int i);
void WalletModelbaab1e_____rolesChanged_roles_keyList_setList(void* ptr, int i);
void* WalletModelbaab1e_____rolesChanged_roles_keyList_newList(void* ptr);
void* WalletModelbaab1e_NewWalletModel(void* parent);
void WalletModelbaab1e_DestroyWalletModel(void* ptr);
void WalletModelbaab1e_DestroyWalletModelDefault(void* ptr);
char WalletModelbaab1e_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long WalletModelbaab1e_FlagsDefault(void* ptr, void* index);
void* WalletModelbaab1e_IndexDefault(void* ptr, int row, int column, void* parent);
void* WalletModelbaab1e_SiblingDefault(void* ptr, int row, int column, void* idx);
void* WalletModelbaab1e_BuddyDefault(void* ptr, void* index);
char WalletModelbaab1e_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char WalletModelbaab1e_CanFetchMoreDefault(void* ptr, void* parent);
int WalletModelbaab1e_ColumnCountDefault(void* ptr, void* parent);
void* WalletModelbaab1e_DataDefault(void* ptr, void* index, int role);
void WalletModelbaab1e_FetchMoreDefault(void* ptr, void* parent);
char WalletModelbaab1e_HasChildrenDefault(void* ptr, void* parent);
void* WalletModelbaab1e_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char WalletModelbaab1e_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char WalletModelbaab1e_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList WalletModelbaab1e_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList WalletModelbaab1e_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* WalletModelbaab1e_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString WalletModelbaab1e_MimeTypesDefault(void* ptr);
char WalletModelbaab1e_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char WalletModelbaab1e_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* WalletModelbaab1e_ParentDefault(void* ptr, void* index);
char WalletModelbaab1e_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char WalletModelbaab1e_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void WalletModelbaab1e_ResetInternalDataDefault(void* ptr);
void WalletModelbaab1e_RevertDefault(void* ptr);
struct Moc_PackedList WalletModelbaab1e_RoleNamesDefault(void* ptr);
int WalletModelbaab1e_RowCountDefault(void* ptr, void* parent);
char WalletModelbaab1e_SetDataDefault(void* ptr, void* index, void* value, int role);
char WalletModelbaab1e_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char WalletModelbaab1e_SetItemDataDefault(void* ptr, void* index, void* roles);
void WalletModelbaab1e_SortDefault(void* ptr, int column, long long order);
void* WalletModelbaab1e_SpanDefault(void* ptr, void* index);
char WalletModelbaab1e_SubmitDefault(void* ptr);
long long WalletModelbaab1e_SupportedDragActionsDefault(void* ptr);
long long WalletModelbaab1e_SupportedDropActionsDefault(void* ptr);
void WalletModelbaab1e_ChildEventDefault(void* ptr, void* event);
void WalletModelbaab1e_ConnectNotifyDefault(void* ptr, void* sign);
void WalletModelbaab1e_CustomEventDefault(void* ptr, void* event);
void WalletModelbaab1e_DeleteLaterDefault(void* ptr);
void WalletModelbaab1e_DisconnectNotifyDefault(void* ptr, void* sign);
char WalletModelbaab1e_EventDefault(void* ptr, void* e);
char WalletModelbaab1e_EventFilterDefault(void* ptr, void* watched, void* event);
void WalletModelbaab1e_TimerEventDefault(void* ptr, void* event);
void AddressesModelbaab1e_AddAddress(void* ptr, void* v0);
void AddressesModelbaab1e_RemoveAddress(void* ptr, int v0);
void AddressesModelbaab1e_EditAddress(void* ptr, int v0, struct Moc_PackedString v1, unsigned long long v2, unsigned long long v3);
void AddressesModelbaab1e_LoadModel(void* ptr, struct Moc_PackedString v0);
struct Moc_PackedList AddressesModelbaab1e_Roles(void* ptr);
struct Moc_PackedList AddressesModelbaab1e_RolesDefault(void* ptr);
void AddressesModelbaab1e_SetRoles(void* ptr, void* roles);
void AddressesModelbaab1e_SetRolesDefault(void* ptr, void* roles);
void AddressesModelbaab1e_ConnectRolesChanged(void* ptr);
void AddressesModelbaab1e_DisconnectRolesChanged(void* ptr);
void AddressesModelbaab1e_RolesChanged(void* ptr, void* roles);
struct Moc_PackedList AddressesModelbaab1e_Addresses(void* ptr);
struct Moc_PackedList AddressesModelbaab1e_AddressesDefault(void* ptr);
void AddressesModelbaab1e_SetAddresses(void* ptr, void* addresses);
void AddressesModelbaab1e_SetAddressesDefault(void* ptr, void* addresses);
void AddressesModelbaab1e_ConnectAddressesChanged(void* ptr);
void AddressesModelbaab1e_DisconnectAddressesChanged(void* ptr);
void AddressesModelbaab1e_AddressesChanged(void* ptr, void* addresses);
int AddressesModelbaab1e_Loaded(void* ptr);
int AddressesModelbaab1e_LoadedDefault(void* ptr);
void AddressesModelbaab1e_SetLoaded(void* ptr, int loaded);
void AddressesModelbaab1e_SetLoadedDefault(void* ptr, int loaded);
void AddressesModelbaab1e_ConnectLoadedChanged(void* ptr);
void AddressesModelbaab1e_DisconnectLoadedChanged(void* ptr);
void AddressesModelbaab1e_LoadedChanged(void* ptr, int loaded);
int AddressesModelbaab1e_AddressesModelbaab1e_QRegisterMetaType();
int AddressesModelbaab1e_AddressesModelbaab1e_QRegisterMetaType2(char* typeName);
int AddressesModelbaab1e_AddressesModelbaab1e_QmlRegisterType();
int AddressesModelbaab1e_AddressesModelbaab1e_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int AddressesModelbaab1e_____itemData_keyList_atList(void* ptr, int i);
void AddressesModelbaab1e_____itemData_keyList_setList(void* ptr, int i);
void* AddressesModelbaab1e_____itemData_keyList_newList(void* ptr);
int AddressesModelbaab1e_____roleNames_keyList_atList(void* ptr, int i);
void AddressesModelbaab1e_____roleNames_keyList_setList(void* ptr, int i);
void* AddressesModelbaab1e_____roleNames_keyList_newList(void* ptr);
int AddressesModelbaab1e_____setItemData_roles_keyList_atList(void* ptr, int i);
void AddressesModelbaab1e_____setItemData_roles_keyList_setList(void* ptr, int i);
void* AddressesModelbaab1e_____setItemData_roles_keyList_newList(void* ptr);
void* AddressesModelbaab1e___changePersistentIndexList_from_atList(void* ptr, int i);
void AddressesModelbaab1e___changePersistentIndexList_from_setList(void* ptr, void* i);
void* AddressesModelbaab1e___changePersistentIndexList_from_newList(void* ptr);
void* AddressesModelbaab1e___changePersistentIndexList_to_atList(void* ptr, int i);
void AddressesModelbaab1e___changePersistentIndexList_to_setList(void* ptr, void* i);
void* AddressesModelbaab1e___changePersistentIndexList_to_newList(void* ptr);
int AddressesModelbaab1e___dataChanged_roles_atList(void* ptr, int i);
void AddressesModelbaab1e___dataChanged_roles_setList(void* ptr, int i);
void* AddressesModelbaab1e___dataChanged_roles_newList(void* ptr);
void* AddressesModelbaab1e___itemData_atList(void* ptr, int v, int i);
void AddressesModelbaab1e___itemData_setList(void* ptr, int key, void* i);
void* AddressesModelbaab1e___itemData_newList(void* ptr);
struct Moc_PackedList AddressesModelbaab1e___itemData_keyList(void* ptr);
void* AddressesModelbaab1e___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void AddressesModelbaab1e___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* AddressesModelbaab1e___layoutAboutToBeChanged_parents_newList(void* ptr);
void* AddressesModelbaab1e___layoutChanged_parents_atList(void* ptr, int i);
void AddressesModelbaab1e___layoutChanged_parents_setList(void* ptr, void* i);
void* AddressesModelbaab1e___layoutChanged_parents_newList(void* ptr);
void* AddressesModelbaab1e___match_atList(void* ptr, int i);
void AddressesModelbaab1e___match_setList(void* ptr, void* i);
void* AddressesModelbaab1e___match_newList(void* ptr);
void* AddressesModelbaab1e___mimeData_indexes_atList(void* ptr, int i);
void AddressesModelbaab1e___mimeData_indexes_setList(void* ptr, void* i);
void* AddressesModelbaab1e___mimeData_indexes_newList(void* ptr);
void* AddressesModelbaab1e___persistentIndexList_atList(void* ptr, int i);
void AddressesModelbaab1e___persistentIndexList_setList(void* ptr, void* i);
void* AddressesModelbaab1e___persistentIndexList_newList(void* ptr);
void* AddressesModelbaab1e___roleNames_atList(void* ptr, int v, int i);
void AddressesModelbaab1e___roleNames_setList(void* ptr, int key, void* i);
void* AddressesModelbaab1e___roleNames_newList(void* ptr);
struct Moc_PackedList AddressesModelbaab1e___roleNames_keyList(void* ptr);
void* AddressesModelbaab1e___setItemData_roles_atList(void* ptr, int v, int i);
void AddressesModelbaab1e___setItemData_roles_setList(void* ptr, int key, void* i);
void* AddressesModelbaab1e___setItemData_roles_newList(void* ptr);
struct Moc_PackedList AddressesModelbaab1e___setItemData_roles_keyList(void* ptr);
int AddressesModelbaab1e_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void AddressesModelbaab1e_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* AddressesModelbaab1e_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int AddressesModelbaab1e_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void AddressesModelbaab1e_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* AddressesModelbaab1e_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* AddressesModelbaab1e___children_atList(void* ptr, int i);
void AddressesModelbaab1e___children_setList(void* ptr, void* i);
void* AddressesModelbaab1e___children_newList(void* ptr);
void* AddressesModelbaab1e___dynamicPropertyNames_atList(void* ptr, int i);
void AddressesModelbaab1e___dynamicPropertyNames_setList(void* ptr, void* i);
void* AddressesModelbaab1e___dynamicPropertyNames_newList(void* ptr);
void* AddressesModelbaab1e___findChildren_atList(void* ptr, int i);
void AddressesModelbaab1e___findChildren_setList(void* ptr, void* i);
void* AddressesModelbaab1e___findChildren_newList(void* ptr);
void* AddressesModelbaab1e___findChildren_atList3(void* ptr, int i);
void AddressesModelbaab1e___findChildren_setList3(void* ptr, void* i);
void* AddressesModelbaab1e___findChildren_newList3(void* ptr);
void* AddressesModelbaab1e___qFindChildren_atList2(void* ptr, int i);
void AddressesModelbaab1e___qFindChildren_setList2(void* ptr, void* i);
void* AddressesModelbaab1e___qFindChildren_newList2(void* ptr);
void* AddressesModelbaab1e___roles_atList(void* ptr, int v, int i);
void AddressesModelbaab1e___roles_setList(void* ptr, int key, void* i);
void* AddressesModelbaab1e___roles_newList(void* ptr);
struct Moc_PackedList AddressesModelbaab1e___roles_keyList(void* ptr);
void* AddressesModelbaab1e___setRoles_roles_atList(void* ptr, int v, int i);
void AddressesModelbaab1e___setRoles_roles_setList(void* ptr, int key, void* i);
void* AddressesModelbaab1e___setRoles_roles_newList(void* ptr);
struct Moc_PackedList AddressesModelbaab1e___setRoles_roles_keyList(void* ptr);
void* AddressesModelbaab1e___rolesChanged_roles_atList(void* ptr, int v, int i);
void AddressesModelbaab1e___rolesChanged_roles_setList(void* ptr, int key, void* i);
void* AddressesModelbaab1e___rolesChanged_roles_newList(void* ptr);
struct Moc_PackedList AddressesModelbaab1e___rolesChanged_roles_keyList(void* ptr);
void* AddressesModelbaab1e___addresses_atList(void* ptr, int i);
void AddressesModelbaab1e___addresses_setList(void* ptr, void* i);
void* AddressesModelbaab1e___addresses_newList(void* ptr);
void* AddressesModelbaab1e___setAddresses_addresses_atList(void* ptr, int i);
void AddressesModelbaab1e___setAddresses_addresses_setList(void* ptr, void* i);
void* AddressesModelbaab1e___setAddresses_addresses_newList(void* ptr);
void* AddressesModelbaab1e___addressesChanged_addresses_atList(void* ptr, int i);
void AddressesModelbaab1e___addressesChanged_addresses_setList(void* ptr, void* i);
void* AddressesModelbaab1e___addressesChanged_addresses_newList(void* ptr);
int AddressesModelbaab1e_____roles_keyList_atList(void* ptr, int i);
void AddressesModelbaab1e_____roles_keyList_setList(void* ptr, int i);
void* AddressesModelbaab1e_____roles_keyList_newList(void* ptr);
int AddressesModelbaab1e_____setRoles_roles_keyList_atList(void* ptr, int i);
void AddressesModelbaab1e_____setRoles_roles_keyList_setList(void* ptr, int i);
void* AddressesModelbaab1e_____setRoles_roles_keyList_newList(void* ptr);
int AddressesModelbaab1e_____rolesChanged_roles_keyList_atList(void* ptr, int i);
void AddressesModelbaab1e_____rolesChanged_roles_keyList_setList(void* ptr, int i);
void* AddressesModelbaab1e_____rolesChanged_roles_keyList_newList(void* ptr);
void* AddressesModelbaab1e_NewAddressesModel(void* parent);
void AddressesModelbaab1e_DestroyAddressesModel(void* ptr);
void AddressesModelbaab1e_DestroyAddressesModelDefault(void* ptr);
char AddressesModelbaab1e_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long AddressesModelbaab1e_FlagsDefault(void* ptr, void* index);
void* AddressesModelbaab1e_IndexDefault(void* ptr, int row, int column, void* parent);
void* AddressesModelbaab1e_SiblingDefault(void* ptr, int row, int column, void* idx);
void* AddressesModelbaab1e_BuddyDefault(void* ptr, void* index);
char AddressesModelbaab1e_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char AddressesModelbaab1e_CanFetchMoreDefault(void* ptr, void* parent);
int AddressesModelbaab1e_ColumnCountDefault(void* ptr, void* parent);
void* AddressesModelbaab1e_DataDefault(void* ptr, void* index, int role);
void AddressesModelbaab1e_FetchMoreDefault(void* ptr, void* parent);
char AddressesModelbaab1e_HasChildrenDefault(void* ptr, void* parent);
void* AddressesModelbaab1e_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char AddressesModelbaab1e_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char AddressesModelbaab1e_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList AddressesModelbaab1e_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList AddressesModelbaab1e_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* AddressesModelbaab1e_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString AddressesModelbaab1e_MimeTypesDefault(void* ptr);
char AddressesModelbaab1e_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char AddressesModelbaab1e_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* AddressesModelbaab1e_ParentDefault(void* ptr, void* index);
char AddressesModelbaab1e_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char AddressesModelbaab1e_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void AddressesModelbaab1e_ResetInternalDataDefault(void* ptr);
void AddressesModelbaab1e_RevertDefault(void* ptr);
struct Moc_PackedList AddressesModelbaab1e_RoleNamesDefault(void* ptr);
int AddressesModelbaab1e_RowCountDefault(void* ptr, void* parent);
char AddressesModelbaab1e_SetDataDefault(void* ptr, void* index, void* value, int role);
char AddressesModelbaab1e_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char AddressesModelbaab1e_SetItemDataDefault(void* ptr, void* index, void* roles);
void AddressesModelbaab1e_SortDefault(void* ptr, int column, long long order);
void* AddressesModelbaab1e_SpanDefault(void* ptr, void* index);
char AddressesModelbaab1e_SubmitDefault(void* ptr);
long long AddressesModelbaab1e_SupportedDragActionsDefault(void* ptr);
long long AddressesModelbaab1e_SupportedDropActionsDefault(void* ptr);
void AddressesModelbaab1e_ChildEventDefault(void* ptr, void* event);
void AddressesModelbaab1e_ConnectNotifyDefault(void* ptr, void* sign);
void AddressesModelbaab1e_CustomEventDefault(void* ptr, void* event);
void AddressesModelbaab1e_DeleteLaterDefault(void* ptr);
void AddressesModelbaab1e_DisconnectNotifyDefault(void* ptr, void* sign);
char AddressesModelbaab1e_EventDefault(void* ptr, void* e);
char AddressesModelbaab1e_EventFilterDefault(void* ptr, void* watched, void* event);
void AddressesModelbaab1e_TimerEventDefault(void* ptr, void* event);
struct Moc_PackedString QAddressbaab1e_Address(void* ptr);
struct Moc_PackedString QAddressbaab1e_AddressDefault(void* ptr);
void QAddressbaab1e_SetAddress(void* ptr, struct Moc_PackedString address);
void QAddressbaab1e_SetAddressDefault(void* ptr, struct Moc_PackedString address);
void QAddressbaab1e_ConnectAddressChanged(void* ptr);
void QAddressbaab1e_DisconnectAddressChanged(void* ptr);
void QAddressbaab1e_AddressChanged(void* ptr, struct Moc_PackedString address);
unsigned long long QAddressbaab1e_AddressSky(void* ptr);
unsigned long long QAddressbaab1e_AddressSkyDefault(void* ptr);
void QAddressbaab1e_SetAddressSky(void* ptr, unsigned long long addressSky);
void QAddressbaab1e_SetAddressSkyDefault(void* ptr, unsigned long long addressSky);
void QAddressbaab1e_ConnectAddressSkyChanged(void* ptr);
void QAddressbaab1e_DisconnectAddressSkyChanged(void* ptr);
void QAddressbaab1e_AddressSkyChanged(void* ptr, unsigned long long addressSky);
unsigned long long QAddressbaab1e_AddressCoinHours(void* ptr);
unsigned long long QAddressbaab1e_AddressCoinHoursDefault(void* ptr);
void QAddressbaab1e_SetAddressCoinHours(void* ptr, unsigned long long addressCoinHours);
void QAddressbaab1e_SetAddressCoinHoursDefault(void* ptr, unsigned long long addressCoinHours);
void QAddressbaab1e_ConnectAddressCoinHoursChanged(void* ptr);
void QAddressbaab1e_DisconnectAddressCoinHoursChanged(void* ptr);
void QAddressbaab1e_AddressCoinHoursChanged(void* ptr, unsigned long long addressCoinHours);
int QAddressbaab1e_QAddressbaab1e_QRegisterMetaType();
int QAddressbaab1e_QAddressbaab1e_QRegisterMetaType2(char* typeName);
int QAddressbaab1e_QAddressbaab1e_QmlRegisterType();
int QAddressbaab1e_QAddressbaab1e_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* QAddressbaab1e___children_atList(void* ptr, int i);
void QAddressbaab1e___children_setList(void* ptr, void* i);
void* QAddressbaab1e___children_newList(void* ptr);
void* QAddressbaab1e___dynamicPropertyNames_atList(void* ptr, int i);
void QAddressbaab1e___dynamicPropertyNames_setList(void* ptr, void* i);
void* QAddressbaab1e___dynamicPropertyNames_newList(void* ptr);
void* QAddressbaab1e___findChildren_atList(void* ptr, int i);
void QAddressbaab1e___findChildren_setList(void* ptr, void* i);
void* QAddressbaab1e___findChildren_newList(void* ptr);
void* QAddressbaab1e___findChildren_atList3(void* ptr, int i);
void QAddressbaab1e___findChildren_setList3(void* ptr, void* i);
void* QAddressbaab1e___findChildren_newList3(void* ptr);
void* QAddressbaab1e___qFindChildren_atList2(void* ptr, int i);
void QAddressbaab1e___qFindChildren_setList2(void* ptr, void* i);
void* QAddressbaab1e___qFindChildren_newList2(void* ptr);
void* QAddressbaab1e_NewQAddress(void* parent);
void QAddressbaab1e_DestroyQAddress(void* ptr);
void QAddressbaab1e_DestroyQAddressDefault(void* ptr);
void QAddressbaab1e_ChildEventDefault(void* ptr, void* event);
void QAddressbaab1e_ConnectNotifyDefault(void* ptr, void* sign);
void QAddressbaab1e_CustomEventDefault(void* ptr, void* event);
void QAddressbaab1e_DeleteLaterDefault(void* ptr);
void QAddressbaab1e_DisconnectNotifyDefault(void* ptr, void* sign);
char QAddressbaab1e_EventDefault(void* ptr, void* e);
char QAddressbaab1e_EventFilterDefault(void* ptr, void* watched, void* event);
void QAddressbaab1e_TimerEventDefault(void* ptr, void* event);
struct Moc_PackedString QWalletbaab1e_Name(void* ptr);
struct Moc_PackedString QWalletbaab1e_NameDefault(void* ptr);
void QWalletbaab1e_SetName(void* ptr, struct Moc_PackedString name);
void QWalletbaab1e_SetNameDefault(void* ptr, struct Moc_PackedString name);
void QWalletbaab1e_ConnectNameChanged(void* ptr);
void QWalletbaab1e_DisconnectNameChanged(void* ptr);
void QWalletbaab1e_NameChanged(void* ptr, struct Moc_PackedString name);
int QWalletbaab1e_EncryptionEnabled(void* ptr);
int QWalletbaab1e_EncryptionEnabledDefault(void* ptr);
void QWalletbaab1e_SetEncryptionEnabled(void* ptr, int encryptionEnabled);
void QWalletbaab1e_SetEncryptionEnabledDefault(void* ptr, int encryptionEnabled);
void QWalletbaab1e_ConnectEncryptionEnabledChanged(void* ptr);
void QWalletbaab1e_DisconnectEncryptionEnabledChanged(void* ptr);
void QWalletbaab1e_EncryptionEnabledChanged(void* ptr, int encryptionEnabled);
int QWalletbaab1e_Sky(void* ptr);
int QWalletbaab1e_SkyDefault(void* ptr);
void QWalletbaab1e_SetSky(void* ptr, int sky);
void QWalletbaab1e_SetSkyDefault(void* ptr, int sky);
void QWalletbaab1e_ConnectSkyChanged(void* ptr);
void QWalletbaab1e_DisconnectSkyChanged(void* ptr);
void QWalletbaab1e_SkyChanged(void* ptr, int sky);
int QWalletbaab1e_CoinHours(void* ptr);
int QWalletbaab1e_CoinHoursDefault(void* ptr);
void QWalletbaab1e_SetCoinHours(void* ptr, int coinHours);
void QWalletbaab1e_SetCoinHoursDefault(void* ptr, int coinHours);
void QWalletbaab1e_ConnectCoinHoursChanged(void* ptr);
void QWalletbaab1e_DisconnectCoinHoursChanged(void* ptr);
void QWalletbaab1e_CoinHoursChanged(void* ptr, int coinHours);
struct Moc_PackedString QWalletbaab1e_FileName(void* ptr);
struct Moc_PackedString QWalletbaab1e_FileNameDefault(void* ptr);
void QWalletbaab1e_SetFileName(void* ptr, struct Moc_PackedString fileName);
void QWalletbaab1e_SetFileNameDefault(void* ptr, struct Moc_PackedString fileName);
void QWalletbaab1e_ConnectFileNameChanged(void* ptr);
void QWalletbaab1e_DisconnectFileNameChanged(void* ptr);
void QWalletbaab1e_FileNameChanged(void* ptr, struct Moc_PackedString fileName);
int QWalletbaab1e_QWalletbaab1e_QRegisterMetaType();
int QWalletbaab1e_QWalletbaab1e_QRegisterMetaType2(char* typeName);
int QWalletbaab1e_QWalletbaab1e_QmlRegisterType();
int QWalletbaab1e_QWalletbaab1e_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* QWalletbaab1e___children_atList(void* ptr, int i);
void QWalletbaab1e___children_setList(void* ptr, void* i);
void* QWalletbaab1e___children_newList(void* ptr);
void* QWalletbaab1e___dynamicPropertyNames_atList(void* ptr, int i);
void QWalletbaab1e___dynamicPropertyNames_setList(void* ptr, void* i);
void* QWalletbaab1e___dynamicPropertyNames_newList(void* ptr);
void* QWalletbaab1e___findChildren_atList(void* ptr, int i);
void QWalletbaab1e___findChildren_setList(void* ptr, void* i);
void* QWalletbaab1e___findChildren_newList(void* ptr);
void* QWalletbaab1e___findChildren_atList3(void* ptr, int i);
void QWalletbaab1e___findChildren_setList3(void* ptr, void* i);
void* QWalletbaab1e___findChildren_newList3(void* ptr);
void* QWalletbaab1e___qFindChildren_atList2(void* ptr, int i);
void QWalletbaab1e___qFindChildren_setList2(void* ptr, void* i);
void* QWalletbaab1e___qFindChildren_newList2(void* ptr);
void* QWalletbaab1e_NewQWallet(void* parent);
void QWalletbaab1e_DestroyQWallet(void* ptr);
void QWalletbaab1e_DestroyQWalletDefault(void* ptr);
void QWalletbaab1e_ChildEventDefault(void* ptr, void* event);
void QWalletbaab1e_ConnectNotifyDefault(void* ptr, void* sign);
void QWalletbaab1e_CustomEventDefault(void* ptr, void* event);
void QWalletbaab1e_DeleteLaterDefault(void* ptr);
void QWalletbaab1e_DisconnectNotifyDefault(void* ptr, void* sign);
char QWalletbaab1e_EventDefault(void* ptr, void* e);
char QWalletbaab1e_EventFilterDefault(void* ptr, void* watched, void* event);
void QWalletbaab1e_TimerEventDefault(void* ptr, void* event);

#ifdef __cplusplus
}
#endif

#endif