// +build minimal

#pragma once

#ifndef GO_QTCORE_H
#define GO_QTCORE_H

#include <stdint.h>

#ifdef __cplusplus
int QAbstractItemModel_QAbstractItemModel_QRegisterMetaType();
int QAbstractProxyModel_QAbstractProxyModel_QRegisterMetaType();
int QAbstractTableModel_QAbstractTableModel_QRegisterMetaType();
int QCoreApplication_QCoreApplication_QRegisterMetaType();
int QFile_QFile_QRegisterMetaType();
int QFileDevice_QFileDevice_QRegisterMetaType();
int QIODevice_QIODevice_QRegisterMetaType();
int QMimeData_QMimeData_QRegisterMetaType();
int QObject_QObject_QRegisterMetaType();
int QSortFilterProxyModel_QSortFilterProxyModel_QRegisterMetaType();
int QTimer_QTimer_QRegisterMetaType();
extern "C" {
#endif

struct QtCore_PackedString { char* data; long long len; };
struct QtCore_PackedList { void* data; long long len; };
void* QAbstractItemModel_NewQAbstractItemModel(void* parent);
void QAbstractItemModel_BeginResetModel(void* ptr);
void* QAbstractItemModel_Buddy(void* ptr, void* index);
void* QAbstractItemModel_BuddyDefault(void* ptr, void* index);
char QAbstractItemModel_CanDropMimeData(void* ptr, void* data, long long action, int row, int column, void* parent);
char QAbstractItemModel_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char QAbstractItemModel_CanFetchMore(void* ptr, void* parent);
char QAbstractItemModel_CanFetchMoreDefault(void* ptr, void* parent);
int QAbstractItemModel_ColumnCount(void* ptr, void* parent);
void QAbstractItemModel_ConnectColumnsAboutToBeInserted(void* ptr, long long t);
void QAbstractItemModel_DisconnectColumnsAboutToBeInserted(void* ptr);
void QAbstractItemModel_ConnectColumnsAboutToBeMoved(void* ptr, long long t);
void QAbstractItemModel_DisconnectColumnsAboutToBeMoved(void* ptr);
void QAbstractItemModel_ConnectColumnsAboutToBeRemoved(void* ptr, long long t);
void QAbstractItemModel_DisconnectColumnsAboutToBeRemoved(void* ptr);
void QAbstractItemModel_ConnectColumnsInserted(void* ptr, long long t);
void QAbstractItemModel_DisconnectColumnsInserted(void* ptr);
void QAbstractItemModel_ConnectColumnsMoved(void* ptr, long long t);
void QAbstractItemModel_DisconnectColumnsMoved(void* ptr);
void QAbstractItemModel_ConnectColumnsRemoved(void* ptr, long long t);
void QAbstractItemModel_DisconnectColumnsRemoved(void* ptr);
void* QAbstractItemModel_Data(void* ptr, void* index, int role);
void QAbstractItemModel_ConnectDataChanged(void* ptr, long long t);
void QAbstractItemModel_DisconnectDataChanged(void* ptr);
void QAbstractItemModel_DataChanged(void* ptr, void* topLeft, void* bottomRight, void* roles);
char QAbstractItemModel_DropMimeData(void* ptr, void* data, long long action, int row, int column, void* parent);
char QAbstractItemModel_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
void QAbstractItemModel_EndResetModel(void* ptr);
void QAbstractItemModel_FetchMore(void* ptr, void* parent);
void QAbstractItemModel_FetchMoreDefault(void* ptr, void* parent);
long long QAbstractItemModel_Flags(void* ptr, void* index);
long long QAbstractItemModel_FlagsDefault(void* ptr, void* index);
char QAbstractItemModel_HasChildren(void* ptr, void* parent);
char QAbstractItemModel_HasChildrenDefault(void* ptr, void* parent);
void* QAbstractItemModel_HeaderData(void* ptr, int section, long long orientation, int role);
void* QAbstractItemModel_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
void QAbstractItemModel_ConnectHeaderDataChanged(void* ptr, long long t);
void QAbstractItemModel_DisconnectHeaderDataChanged(void* ptr);
void QAbstractItemModel_HeaderDataChanged(void* ptr, long long orientation, int first, int last);
void* QAbstractItemModel_Index(void* ptr, int row, int column, void* parent);
char QAbstractItemModel_InsertColumn(void* ptr, int column, void* parent);
char QAbstractItemModel_InsertColumns(void* ptr, int column, int count, void* parent);
char QAbstractItemModel_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char QAbstractItemModel_InsertRow(void* ptr, int row, void* parent);
char QAbstractItemModel_InsertRows(void* ptr, int row, int count, void* parent);
char QAbstractItemModel_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct QtCore_PackedList QAbstractItemModel_ItemData(void* ptr, void* index);
struct QtCore_PackedList QAbstractItemModel_ItemDataDefault(void* ptr, void* index);
void QAbstractItemModel_ConnectLayoutAboutToBeChanged(void* ptr, long long t);
void QAbstractItemModel_DisconnectLayoutAboutToBeChanged(void* ptr);
void QAbstractItemModel_LayoutAboutToBeChanged(void* ptr, void* parents, long long hint);
void QAbstractItemModel_ConnectLayoutChanged(void* ptr, long long t);
void QAbstractItemModel_DisconnectLayoutChanged(void* ptr);
void QAbstractItemModel_LayoutChanged(void* ptr, void* parents, long long hint);
struct QtCore_PackedList QAbstractItemModel_Match(void* ptr, void* start, int role, void* value, int hits, long long flags);
struct QtCore_PackedList QAbstractItemModel_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* QAbstractItemModel_MimeData(void* ptr, void* indexes);
void* QAbstractItemModel_MimeDataDefault(void* ptr, void* indexes);
struct QtCore_PackedString QAbstractItemModel_MimeTypes(void* ptr);
struct QtCore_PackedString QAbstractItemModel_MimeTypesDefault(void* ptr);
void QAbstractItemModel_ConnectModelAboutToBeReset(void* ptr, long long t);
void QAbstractItemModel_DisconnectModelAboutToBeReset(void* ptr);
void QAbstractItemModel_ConnectModelReset(void* ptr, long long t);
void QAbstractItemModel_DisconnectModelReset(void* ptr);
char QAbstractItemModel_MoveColumn(void* ptr, void* sourceParent, int sourceColumn, void* destinationParent, int destinationChild);
char QAbstractItemModel_MoveColumns(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char QAbstractItemModel_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char QAbstractItemModel_MoveRow(void* ptr, void* sourceParent, int sourceRow, void* destinationParent, int destinationChild);
char QAbstractItemModel_MoveRows(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char QAbstractItemModel_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* QAbstractItemModel_Parent(void* ptr, void* index);
struct QtCore_PackedList QAbstractItemModel_PersistentIndexList(void* ptr);
char QAbstractItemModel_RemoveColumn(void* ptr, int column, void* parent);
char QAbstractItemModel_RemoveColumns(void* ptr, int column, int count, void* parent);
char QAbstractItemModel_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char QAbstractItemModel_RemoveRow(void* ptr, int row, void* parent);
char QAbstractItemModel_RemoveRows(void* ptr, int row, int count, void* parent);
char QAbstractItemModel_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void QAbstractItemModel_ResetInternalData(void* ptr);
void QAbstractItemModel_ResetInternalDataDefault(void* ptr);
void QAbstractItemModel_Revert(void* ptr);
void QAbstractItemModel_RevertDefault(void* ptr);
struct QtCore_PackedList QAbstractItemModel_RoleNames(void* ptr);
struct QtCore_PackedList QAbstractItemModel_RoleNamesDefault(void* ptr);
int QAbstractItemModel_RowCount(void* ptr, void* parent);
void QAbstractItemModel_ConnectRowsAboutToBeInserted(void* ptr, long long t);
void QAbstractItemModel_DisconnectRowsAboutToBeInserted(void* ptr);
void QAbstractItemModel_ConnectRowsAboutToBeMoved(void* ptr, long long t);
void QAbstractItemModel_DisconnectRowsAboutToBeMoved(void* ptr);
void QAbstractItemModel_ConnectRowsAboutToBeRemoved(void* ptr, long long t);
void QAbstractItemModel_DisconnectRowsAboutToBeRemoved(void* ptr);
void QAbstractItemModel_ConnectRowsInserted(void* ptr, long long t);
void QAbstractItemModel_DisconnectRowsInserted(void* ptr);
void QAbstractItemModel_ConnectRowsMoved(void* ptr, long long t);
void QAbstractItemModel_DisconnectRowsMoved(void* ptr);
void QAbstractItemModel_ConnectRowsRemoved(void* ptr, long long t);
void QAbstractItemModel_DisconnectRowsRemoved(void* ptr);
char QAbstractItemModel_SetData(void* ptr, void* index, void* value, int role);
char QAbstractItemModel_SetDataDefault(void* ptr, void* index, void* value, int role);
char QAbstractItemModel_SetHeaderData(void* ptr, int section, long long orientation, void* value, int role);
char QAbstractItemModel_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char QAbstractItemModel_SetItemData(void* ptr, void* index, void* roles);
char QAbstractItemModel_SetItemDataDefault(void* ptr, void* index, void* roles);
void* QAbstractItemModel_Sibling(void* ptr, int row, int column, void* index);
void* QAbstractItemModel_SiblingDefault(void* ptr, int row, int column, void* index);
void QAbstractItemModel_Sort(void* ptr, int column, long long order);
void QAbstractItemModel_SortDefault(void* ptr, int column, long long order);
void* QAbstractItemModel_Span(void* ptr, void* index);
void* QAbstractItemModel_SpanDefault(void* ptr, void* index);
char QAbstractItemModel_Submit(void* ptr);
char QAbstractItemModel_SubmitDefault(void* ptr);
long long QAbstractItemModel_SupportedDragActions(void* ptr);
long long QAbstractItemModel_SupportedDragActionsDefault(void* ptr);
long long QAbstractItemModel_SupportedDropActions(void* ptr);
long long QAbstractItemModel_SupportedDropActionsDefault(void* ptr);
void QAbstractItemModel_DestroyQAbstractItemModel(void* ptr);
void QAbstractItemModel_DestroyQAbstractItemModelDefault(void* ptr);
void* QAbstractItemModel___changePersistentIndexList_from_atList(void* ptr, int i);
void QAbstractItemModel___changePersistentIndexList_from_setList(void* ptr, void* i);
void* QAbstractItemModel___changePersistentIndexList_from_newList(void* ptr);
void* QAbstractItemModel___changePersistentIndexList_to_atList(void* ptr, int i);
void QAbstractItemModel___changePersistentIndexList_to_setList(void* ptr, void* i);
void* QAbstractItemModel___changePersistentIndexList_to_newList(void* ptr);
int QAbstractItemModel___dataChanged_roles_atList(void* ptr, int i);
void QAbstractItemModel___dataChanged_roles_setList(void* ptr, int i);
void* QAbstractItemModel___dataChanged_roles_newList(void* ptr);
void* QAbstractItemModel___doSetRoleNames_roleNames_atList(void* ptr, int v, int i);
void QAbstractItemModel___doSetRoleNames_roleNames_setList(void* ptr, int key, void* i);
void* QAbstractItemModel___doSetRoleNames_roleNames_newList(void* ptr);
struct QtCore_PackedList QAbstractItemModel___doSetRoleNames_roleNames_keyList(void* ptr);
void* QAbstractItemModel___encodeData_indexes_atList(void* ptr, int i);
void QAbstractItemModel___encodeData_indexes_setList(void* ptr, void* i);
void* QAbstractItemModel___encodeData_indexes_newList(void* ptr);
void* QAbstractItemModel___itemData_atList(void* ptr, int v, int i);
void QAbstractItemModel___itemData_setList(void* ptr, int key, void* i);
void* QAbstractItemModel___itemData_newList(void* ptr);
struct QtCore_PackedList QAbstractItemModel___itemData_keyList(void* ptr);
void* QAbstractItemModel___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void QAbstractItemModel___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* QAbstractItemModel___layoutAboutToBeChanged_parents_newList(void* ptr);
void* QAbstractItemModel___layoutChanged_parents_atList(void* ptr, int i);
void QAbstractItemModel___layoutChanged_parents_setList(void* ptr, void* i);
void* QAbstractItemModel___layoutChanged_parents_newList(void* ptr);
void* QAbstractItemModel___match_atList(void* ptr, int i);
void QAbstractItemModel___match_setList(void* ptr, void* i);
void* QAbstractItemModel___match_newList(void* ptr);
void* QAbstractItemModel___mimeData_indexes_atList(void* ptr, int i);
void QAbstractItemModel___mimeData_indexes_setList(void* ptr, void* i);
void* QAbstractItemModel___mimeData_indexes_newList(void* ptr);
void* QAbstractItemModel___persistentIndexList_atList(void* ptr, int i);
void QAbstractItemModel___persistentIndexList_setList(void* ptr, void* i);
void* QAbstractItemModel___persistentIndexList_newList(void* ptr);
void* QAbstractItemModel___roleNames_atList(void* ptr, int v, int i);
void QAbstractItemModel___roleNames_setList(void* ptr, int key, void* i);
void* QAbstractItemModel___roleNames_newList(void* ptr);
struct QtCore_PackedList QAbstractItemModel___roleNames_keyList(void* ptr);
void* QAbstractItemModel___setItemData_roles_atList(void* ptr, int v, int i);
void QAbstractItemModel___setItemData_roles_setList(void* ptr, int key, void* i);
void* QAbstractItemModel___setItemData_roles_newList(void* ptr);
struct QtCore_PackedList QAbstractItemModel___setItemData_roles_keyList(void* ptr);
void* QAbstractItemModel___setRoleNames_roleNames_atList(void* ptr, int v, int i);
void QAbstractItemModel___setRoleNames_roleNames_setList(void* ptr, int key, void* i);
void* QAbstractItemModel___setRoleNames_roleNames_newList(void* ptr);
struct QtCore_PackedList QAbstractItemModel___setRoleNames_roleNames_keyList(void* ptr);
int QAbstractItemModel_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void QAbstractItemModel_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* QAbstractItemModel_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int QAbstractItemModel_____itemData_keyList_atList(void* ptr, int i);
void QAbstractItemModel_____itemData_keyList_setList(void* ptr, int i);
void* QAbstractItemModel_____itemData_keyList_newList(void* ptr);
int QAbstractItemModel_____roleNames_keyList_atList(void* ptr, int i);
void QAbstractItemModel_____roleNames_keyList_setList(void* ptr, int i);
void* QAbstractItemModel_____roleNames_keyList_newList(void* ptr);
int QAbstractItemModel_____setItemData_roles_keyList_atList(void* ptr, int i);
void QAbstractItemModel_____setItemData_roles_keyList_setList(void* ptr, int i);
void* QAbstractItemModel_____setItemData_roles_keyList_newList(void* ptr);
int QAbstractItemModel_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void QAbstractItemModel_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* QAbstractItemModel_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* QAbstractProxyModel_NewQAbstractProxyModel(void* parent);
void* QAbstractProxyModel_Data(void* ptr, void* proxyIndex, int role);
void* QAbstractProxyModel_DataDefault(void* ptr, void* proxyIndex, int role);
void* QAbstractProxyModel_MapFromSource(void* ptr, void* sourceIndex);
void* QAbstractProxyModel_MapToSource(void* ptr, void* proxyIndex);
void QAbstractProxyModel_Revert(void* ptr);
void QAbstractProxyModel_RevertDefault(void* ptr);
void QAbstractProxyModel_SetSourceModel(void* ptr, void* sourceModel);
void QAbstractProxyModel_SetSourceModelDefault(void* ptr, void* sourceModel);
void* QAbstractProxyModel_SourceModel(void* ptr);
char QAbstractProxyModel_Submit(void* ptr);
char QAbstractProxyModel_SubmitDefault(void* ptr);
void QAbstractProxyModel_DestroyQAbstractProxyModel(void* ptr);
void QAbstractProxyModel_DestroyQAbstractProxyModelDefault(void* ptr);
int QAbstractProxyModel_ColumnCount(void* ptr, void* parent);
int QAbstractProxyModel_ColumnCountDefault(void* ptr, void* parent);
void* QAbstractProxyModel_Index(void* ptr, int row, int column, void* parent);
void* QAbstractProxyModel_IndexDefault(void* ptr, int row, int column, void* parent);
void* QAbstractProxyModel_Parent(void* ptr, void* index);
void* QAbstractProxyModel_ParentDefault(void* ptr, void* index);
int QAbstractProxyModel_RowCount(void* ptr, void* parent);
int QAbstractProxyModel_RowCountDefault(void* ptr, void* parent);
void* QAbstractTableModel_NewQAbstractTableModel(void* parent);
void* QAbstractTableModel_Index(void* ptr, int row, int column, void* parent);
void* QAbstractTableModel_IndexDefault(void* ptr, int row, int column, void* parent);
void QAbstractTableModel_DestroyQAbstractTableModel(void* ptr);
void QAbstractTableModel_DestroyQAbstractTableModelDefault(void* ptr);
int QAbstractTableModel_ColumnCount(void* ptr, void* parent);
int QAbstractTableModel_ColumnCountDefault(void* ptr, void* parent);
void* QAbstractTableModel_Data(void* ptr, void* index, int role);
void* QAbstractTableModel_DataDefault(void* ptr, void* index, int role);
void* QAbstractTableModel_Parent(void* ptr, void* index);
void* QAbstractTableModel_ParentDefault(void* ptr, void* index);
int QAbstractTableModel_RowCount(void* ptr, void* parent);
int QAbstractTableModel_RowCountDefault(void* ptr, void* parent);
void* QBitArray_NewQBitArray();
void* QBitArray_NewQBitArray2(int size, char value);
void* QBitArray_NewQBitArray3(void* other);
void* QBitArray_NewQBitArray4(void* other);
char QBitArray_At(void* ptr, int i);
int QBitArray_Count(void* ptr);
int QBitArray_Count2(void* ptr, char on);
char QBitArray_Fill(void* ptr, char value, int size);
void QBitArray_Fill2(void* ptr, char value, int begin, int end);
void QBitArray_Resize(void* ptr, int size);
int QBitArray_Size(void* ptr);
void* QByteArray_NewQByteArray();
void* QByteArray_NewQByteArray2(char* data, int size);
void* QByteArray_NewQByteArray3(int size, char* ch);
void* QByteArray_NewQByteArray4(void* other);
struct QtCore_PackedString QByteArray_At(void* ptr, int i);
struct QtCore_PackedString QByteArray_Back(void* ptr);
char QByteArray_Contains(void* ptr, void* ba);
char QByteArray_Contains2(void* ptr, char* ch);
char QByteArray_Contains3(void* ptr, char* str);
int QByteArray_Count(void* ptr, void* ba);
int QByteArray_Count2(void* ptr, char* ch);
int QByteArray_Count3(void* ptr, char* str);
int QByteArray_Count4(void* ptr);
struct QtCore_PackedString QByteArray_Data(void* ptr);
struct QtCore_PackedString QByteArray_Data2(void* ptr);
void* QByteArray_Fill(void* ptr, char* ch, int size);
void* QByteArray_Insert(void* ptr, int i, void* ba);
void* QByteArray_Insert2(void* ptr, int i, char* ch);
void* QByteArray_Insert3(void* ptr, int i, int count, char* ch);
void* QByteArray_Insert4(void* ptr, int i, char* str);
void* QByteArray_Insert5(void* ptr, int i, char* str, int l);
void* QByteArray_Insert6(void* ptr, int i, struct QtCore_PackedString str);
void* QByteArray_Left(void* ptr, int l);
void* QByteArray_Remove(void* ptr, int pos, int l);
void QByteArray_Resize(void* ptr, int size);
void* QByteArray_Right(void* ptr, int l);
int QByteArray_Size(void* ptr);
struct QtCore_PackedList QByteArray_Split(void* ptr, char* sep);
int QByteArray_ToInt(void* ptr, char* ok, int base);
void QByteArray_DestroyQByteArray(void* ptr);
void* QByteArray___split_atList(void* ptr, int i);
void QByteArray___split_setList(void* ptr, void* i);
void* QByteArray___split_newList(void* ptr);
int QCborValue_False_Type();
int QCborValue_True_Type();
int QCborValue_Null_Type();
int QCborValue_Undefined_Type();
void* QChar_NewQChar();
void* QChar_NewQChar2(unsigned short code);
void* QChar_NewQChar3(char* cell, char* row);
void* QChar_NewQChar4(short code);
void* QChar_NewQChar5(unsigned int code);
void* QChar_NewQChar6(int code);
void* QChar_NewQChar7(long long ch);
void* QChar_NewQChar8(void* ch);
void* QChar_NewQChar11(char* ch);
void* QChar_NewQChar12(char* ch);
struct QtCore_PackedString QChar_Row(void* ptr);
void* QChildEvent_NewQChildEvent(long long ty, void* child);
void* QChildEvent_Child(void* ptr);
char QChildEvent_Removed(void* ptr);
void* QCoreApplication_NewQCoreApplication(int argc, char* argv);
int QCoreApplication_QCoreApplication_Exec();
void QCoreApplication_QCoreApplication_SetAttribute(long long attribute, char on);
void QCoreApplication_DestroyQCoreApplication(void* ptr);
void QCoreApplication_DestroyQCoreApplicationDefault(void* ptr);
void* QDataStream_NewQDataStream();
void* QDataStream_NewQDataStream2(void* d);
void* QDataStream_NewQDataStream3(void* a, long long mode);
void* QDataStream_NewQDataStream4(void* a);
long long QDataStream_Status(void* ptr);
void QDataStream_DestroyQDataStream(void* ptr);
void* QDate_NewQDate2();
void* QDate_NewQDate3(int y, int m, int d);
void* QDateTime_NewQDateTime();
void* QDateTime_NewQDateTime2(void* date);
void* QDateTime_NewQDateTime3(void* date, void* ti, long long spec);
void* QDateTime_NewQDateTime4(void* date, void* ti, long long spec, int offsetSeconds);
void* QDateTime_NewQDateTime5(void* date, void* ti, void* timeZone);
void* QDateTime_NewQDateTime6(void* other);
void* QDateTime_NewQDateTime7(void* other);
void* QDateTime_Date(void* ptr);
void* QDateTime_Time(void* ptr);
void QDateTime_DestroyQDateTime(void* ptr);
void* QDir_NewQDir(void* dir);
void* QDir_NewQDir2(struct QtCore_PackedString path);
void* QDir_NewQDir3(struct QtCore_PackedString path, struct QtCore_PackedString nameFilter, long long sort, long long filters);
unsigned int QDir_Count(void* ptr);
void* QDir_QDir_Current();
char QDir_Exists(void* ptr, struct QtCore_PackedString name);
char QDir_Exists2(void* ptr);
long long QDir_Filter(void* ptr);
char QDir_QDir_Match(struct QtCore_PackedString filter, struct QtCore_PackedString fileName);
char QDir_QDir_Match2(struct QtCore_PackedString filters, struct QtCore_PackedString fileName);
struct QtCore_PackedString QDir_Path(void* ptr);
char QDir_Remove(void* ptr, struct QtCore_PackedString fileName);
void* QDir_QDir_Root();
char QDir_QDir_SetCurrent(struct QtCore_PackedString path);
void QDir_SetFilter(void* ptr, long long filters);
void* QDir_QDir_Temp();
void QDir_DestroyQDir(void* ptr);
void* QDir___drives_atList(void* ptr, int i);
void QDir___drives_setList(void* ptr, void* i);
void* QDir___drives_newList(void* ptr);
void* QDir___entryInfoList_atList(void* ptr, int i);
void QDir___entryInfoList_setList(void* ptr, void* i);
void* QDir___entryInfoList_newList(void* ptr);
void* QDir___entryInfoList_atList2(void* ptr, int i);
void QDir___entryInfoList_setList2(void* ptr, void* i);
void* QDir___entryInfoList_newList2(void* ptr);
void* QEasingCurve_NewQEasingCurve(long long ty);
void* QEasingCurve_NewQEasingCurve2(void* other);
void* QEasingCurve_NewQEasingCurve3(void* other);
long long QEasingCurve_Type(void* ptr);
void QEasingCurve_DestroyQEasingCurve(void* ptr);
void* QEasingCurve___cubicBezierSpline_atList(void* ptr, int i);
void QEasingCurve___cubicBezierSpline_setList(void* ptr, void* i);
void* QEasingCurve___cubicBezierSpline_newList(void* ptr);
void* QEasingCurve___toCubicSpline_atList(void* ptr, int i);
void QEasingCurve___toCubicSpline_setList(void* ptr, void* i);
void* QEasingCurve___toCubicSpline_newList(void* ptr);
void* QEvent_NewQEvent(long long ty);
long long QEvent_Type(void* ptr);
void QEvent_DestroyQEvent(void* ptr);
void QEvent_DestroyQEventDefault(void* ptr);
void* QFile_NewQFile();
void* QFile_NewQFile2(struct QtCore_PackedString name);
void* QFile_NewQFile3(void* parent);
void* QFile_NewQFile4(struct QtCore_PackedString name, void* parent);
char QFile_QFile_Exists(struct QtCore_PackedString fileName);
char QFile_Exists2(void* ptr);
char QFile_Open3(void* ptr, int fd, long long mode, long long handleFlags);
char QFile_Remove(void* ptr);
char QFile_QFile_Remove2(struct QtCore_PackedString fileName);
char QFile_QFile_Resize2(struct QtCore_PackedString fileName, long long sz);
void QFile_DestroyQFile(void* ptr);
void QFile_DestroyQFileDefault(void* ptr);
long long QFileDevice_Error(void* ptr);
struct QtCore_PackedString QFileDevice_FileName(void* ptr);
struct QtCore_PackedString QFileDevice_FileNameDefault(void* ptr);
char QFileDevice_Resize(void* ptr, long long sz);
char QFileDevice_ResizeDefault(void* ptr, long long sz);
void QFileDevice_DestroyQFileDevice(void* ptr);
void QFileDevice_DestroyQFileDeviceDefault(void* ptr);
long long QFileDevice_ReadData(void* ptr, char* data, long long maxSize);
long long QFileDevice_ReadDataDefault(void* ptr, char* data, long long maxSize);
long long QFileDevice_WriteData(void* ptr, char* data, long long maxSize);
long long QFileDevice_WriteDataDefault(void* ptr, char* data, long long maxSize);
void* QFileInfo_NewQFileInfo2();
void* QFileInfo_NewQFileInfo3(struct QtCore_PackedString file);
void* QFileInfo_NewQFileInfo4(void* file);
void* QFileInfo_NewQFileInfo5(void* dir, struct QtCore_PackedString file);
void* QFileInfo_NewQFileInfo6(void* fileinfo);
void* QFileInfo_Dir(void* ptr);
char QFileInfo_Exists(void* ptr);
char QFileInfo_QFileInfo_Exists2(struct QtCore_PackedString file);
struct QtCore_PackedString QFileInfo_FileName(void* ptr);
char QFileInfo_IsDir(void* ptr);
struct QtCore_PackedString QFileInfo_Path(void* ptr);
void QFileInfo_SetFile(void* ptr, struct QtCore_PackedString file);
void QFileInfo_SetFile2(void* ptr, void* file);
void QFileInfo_SetFile3(void* ptr, void* dir, struct QtCore_PackedString file);
long long QFileInfo_Size(void* ptr);
struct QtCore_PackedString QFileInfo_Suffix(void* ptr);
void QFileInfo_DestroyQFileInfo(void* ptr);
void* QIODevice_NewQIODevice();
void* QIODevice_NewQIODevice2(void* parent);
char QIODevice_Open(void* ptr, long long mode);
char QIODevice_OpenDefault(void* ptr, long long mode);
long long QIODevice_ReadData(void* ptr, char* data, long long maxSize);
char QIODevice_Reset(void* ptr);
char QIODevice_ResetDefault(void* ptr);
long long QIODevice_Size(void* ptr);
long long QIODevice_SizeDefault(void* ptr);
long long QIODevice_WriteData(void* ptr, char* data, long long maxSize);
void QIODevice_DestroyQIODevice(void* ptr);
void QIODevice_DestroyQIODeviceDefault(void* ptr);
void* QJsonArray_NewQJsonArray();
void* QJsonArray_NewQJsonArray3(void* other);
void* QJsonArray_NewQJsonArray4(void* other);
void* QJsonArray_At(void* ptr, int i);
char QJsonArray_Contains(void* ptr, void* value);
int QJsonArray_Count(void* ptr);
void QJsonArray_Insert(void* ptr, int i, void* value);
int QJsonArray_Size(void* ptr);
void QJsonArray_DestroyQJsonArray(void* ptr);
void* QJsonArray___fromVariantList_list_atList(void* ptr, int i);
void QJsonArray___fromVariantList_list_setList(void* ptr, void* i);
void* QJsonArray___fromVariantList_list_newList(void* ptr);
void* QJsonArray___toVariantList_atList(void* ptr, int i);
void QJsonArray___toVariantList_setList(void* ptr, void* i);
void* QJsonArray___toVariantList_newList(void* ptr);
void* QJsonDocument_NewQJsonDocument();
void* QJsonDocument_NewQJsonDocument2(void* object);
void* QJsonDocument_NewQJsonDocument3(void* array);
void* QJsonDocument_NewQJsonDocument4(void* other);
void* QJsonDocument_NewQJsonDocument5(void* other);
void* QJsonDocument_Array(void* ptr);
void* QJsonDocument_Object(void* ptr);
void* QJsonDocument_ToVariant(void* ptr);
void QJsonDocument_DestroyQJsonDocument(void* ptr);
void* QJsonObject_NewQJsonObject();
void* QJsonObject_NewQJsonObject3(void* other);
void* QJsonObject_NewQJsonObject4(void* other);
char QJsonObject_Contains(void* ptr, struct QtCore_PackedString key);
char QJsonObject_Contains2(void* ptr, void* key);
int QJsonObject_Count(void* ptr);
void QJsonObject_Remove(void* ptr, struct QtCore_PackedString key);
int QJsonObject_Size(void* ptr);
void* QJsonObject_Value(void* ptr, struct QtCore_PackedString key);
void* QJsonObject_Value2(void* ptr, void* key);
void QJsonObject_DestroyQJsonObject(void* ptr);
void* QJsonObject___fromVariantHash_hash_atList(void* ptr, struct QtCore_PackedString v, int i);
void QJsonObject___fromVariantHash_hash_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QJsonObject___fromVariantHash_hash_newList(void* ptr);
struct QtCore_PackedList QJsonObject___fromVariantHash_hash_keyList(void* ptr);
void* QJsonObject___toVariantHash_atList(void* ptr, struct QtCore_PackedString v, int i);
void QJsonObject___toVariantHash_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QJsonObject___toVariantHash_newList(void* ptr);
struct QtCore_PackedList QJsonObject___toVariantHash_keyList(void* ptr);
void* QJsonObject___toVariantMap_atList(void* ptr, struct QtCore_PackedString v, int i);
void QJsonObject___toVariantMap_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QJsonObject___toVariantMap_newList(void* ptr);
struct QtCore_PackedList QJsonObject___toVariantMap_keyList(void* ptr);
struct QtCore_PackedString QJsonObject_____fromVariantHash_hash_keyList_atList(void* ptr, int i);
void QJsonObject_____fromVariantHash_hash_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QJsonObject_____fromVariantHash_hash_keyList_newList(void* ptr);
struct QtCore_PackedString QJsonObject_____fromVariantMap_map_keyList_atList(void* ptr, int i);
void QJsonObject_____fromVariantMap_map_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QJsonObject_____fromVariantMap_map_keyList_newList(void* ptr);
struct QtCore_PackedString QJsonObject_____toVariantHash_keyList_atList(void* ptr, int i);
void QJsonObject_____toVariantHash_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QJsonObject_____toVariantHash_keyList_newList(void* ptr);
struct QtCore_PackedString QJsonObject_____toVariantMap_keyList_atList(void* ptr, int i);
void QJsonObject_____toVariantMap_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QJsonObject_____toVariantMap_keyList_newList(void* ptr);
void* QJsonValue_NewQJsonValue(long long ty);
void* QJsonValue_NewQJsonValue2(char b);
void* QJsonValue_NewQJsonValue3(double n);
void* QJsonValue_NewQJsonValue4(int n);
void* QJsonValue_NewQJsonValue5(long long n);
void* QJsonValue_NewQJsonValue6(struct QtCore_PackedString s);
void* QJsonValue_NewQJsonValue7(void* s);
void* QJsonValue_NewQJsonValue8(char* s);
void* QJsonValue_NewQJsonValue9(void* a);
void* QJsonValue_NewQJsonValue10(void* o);
void* QJsonValue_NewQJsonValue11(void* other);
void* QJsonValue_NewQJsonValue12(void* other);
int QJsonValue_ToInt(void* ptr, int defaultValue);
void* QJsonValue_ToVariant(void* ptr);
long long QJsonValue_Type(void* ptr);
void QJsonValue_DestroyQJsonValue(void* ptr);
void* QLatin1Char_NewQLatin1Char(char* c);
void* QLatin1String_NewQLatin1String();
void* QLatin1String_NewQLatin1String2(char* str);
void* QLatin1String_NewQLatin1String3(char* first, char* last);
void* QLatin1String_NewQLatin1String4(char* str, int size);
void* QLatin1String_NewQLatin1String5(void* str);
struct QtCore_PackedString QLatin1String_Data(void* ptr);
void* QLatin1String_Left(void* ptr, int length);
void* QLatin1String_Right(void* ptr, int length);
int QLatin1String_Size(void* ptr);
void* QLine_NewQLine();
void* QLine_NewQLine2(void* p1, void* p2);
void* QLine_NewQLine3(int x1, int y1, int x2, int y2);
void* QLineF_NewQLineF();
void* QLineF_NewQLineF2(void* p1, void* p2);
void* QLineF_NewQLineF3(double x1, double y1, double x2, double y2);
void* QLineF_NewQLineF4(void* line);
void* QLocale_NewQLocale();
void* QLocale_NewQLocale2(struct QtCore_PackedString name);
void* QLocale_NewQLocale3(long long language, long long country);
void* QLocale_NewQLocale4(long long language, long long scri, long long country);
void* QLocale_NewQLocale5(void* other);
void* QLocale_QLocale_C();
struct QtCore_PackedString QLocale_Name(void* ptr);
int QLocale_ToInt(void* ptr, struct QtCore_PackedString s, char* ok);
int QLocale_ToInt2(void* ptr, void* s, char* ok);
int QLocale_ToInt3(void* ptr, void* s, char* ok);
void QLocale_DestroyQLocale(void* ptr);
void* QLocale___matchingLocales_atList(void* ptr, int i);
void QLocale___matchingLocales_setList(void* ptr, void* i);
void* QLocale___matchingLocales_newList(void* ptr);
long long QLocale___weekdays_atList(void* ptr, int i);
void QLocale___weekdays_setList(void* ptr, long long i);
void* QLocale___weekdays_newList(void* ptr);
void* QMetaMethod_Name(void* ptr);
void* QMetaMethod___parameterNames_atList(void* ptr, int i);
void QMetaMethod___parameterNames_setList(void* ptr, void* i);
void* QMetaMethod___parameterNames_newList(void* ptr);
void* QMetaMethod___parameterTypes_atList(void* ptr, int i);
void QMetaMethod___parameterTypes_setList(void* ptr, void* i);
void* QMetaMethod___parameterTypes_newList(void* ptr);
void* QMetaObject_Constructor(void* ptr, int index);
void* QMetaObject_Method(void* ptr, int index);
struct QtCore_PackedString QMetaProperty_Name(void* ptr);
char QMetaProperty_Reset(void* ptr, void* object);
long long QMetaProperty_Type(void* ptr);
void* QMimeData_NewQMimeData();
void* QMimeData_Data(void* ptr, struct QtCore_PackedString mimeType);
void QMimeData_SetData(void* ptr, struct QtCore_PackedString mimeType, void* data);
void QMimeData_SetText(void* ptr, struct QtCore_PackedString text);
struct QtCore_PackedString QMimeData_Text(void* ptr);
void QMimeData_DestroyQMimeData(void* ptr);
void QMimeData_DestroyQMimeDataDefault(void* ptr);
void* QMimeData___setUrls_urls_atList(void* ptr, int i);
void QMimeData___setUrls_urls_setList(void* ptr, void* i);
void* QMimeData___setUrls_urls_newList(void* ptr);
void* QMimeData___urls_atList(void* ptr, int i);
void QMimeData___urls_setList(void* ptr, void* i);
void* QMimeData___urls_newList(void* ptr);
void* QModelIndex_NewQModelIndex();
int QModelIndex_Column(void* ptr);
void* QModelIndex_Data(void* ptr, int role);
long long QModelIndex_Flags(void* ptr);
void* QModelIndex_Model(void* ptr);
void* QModelIndex_Parent(void* ptr);
int QModelIndex_Row(void* ptr);
void* QModelIndex_Sibling(void* ptr, int row, int column);
void* QObject_NewQObject(void* parent);
void QObject_ChildEvent(void* ptr, void* event);
void QObject_ChildEventDefault(void* ptr, void* event);
struct QtCore_PackedList QObject_Children(void* ptr);
void QObject_ConnectNotify(void* ptr, void* sign);
void QObject_ConnectNotifyDefault(void* ptr, void* sign);
void QObject_CustomEvent(void* ptr, void* event);
void QObject_CustomEventDefault(void* ptr, void* event);
void QObject_DeleteLater(void* ptr);
void QObject_DeleteLaterDefault(void* ptr);
void QObject_ConnectDestroyed(void* ptr, long long t);
void QObject_DisconnectDestroyed(void* ptr);
void QObject_Destroyed(void* ptr, void* obj);
char QObject_QObject_Disconnect(void* sender, char* sign, void* receiver, char* method);
char QObject_QObject_Disconnect2(void* sender, void* sign, void* receiver, void* method);
char QObject_Disconnect3(void* ptr, char* sign, void* receiver, char* method);
char QObject_Disconnect4(void* ptr, void* receiver, char* method);
void QObject_DisconnectNotify(void* ptr, void* sign);
void QObject_DisconnectNotifyDefault(void* ptr, void* sign);
char QObject_Event(void* ptr, void* e);
char QObject_EventDefault(void* ptr, void* e);
char QObject_EventFilter(void* ptr, void* watched, void* event);
char QObject_EventFilterDefault(void* ptr, void* watched, void* event);
void* QObject_FindChild(void* ptr, struct QtCore_PackedString name, long long options);
struct QtCore_PackedList QObject_FindChildren(void* ptr, struct QtCore_PackedString name, long long options);
struct QtCore_PackedList QObject_FindChildren3(void* ptr, void* re, long long options);
struct QtCore_PackedString QObject_ObjectName(void* ptr);
void QObject_ConnectObjectNameChanged(void* ptr, long long t);
void QObject_DisconnectObjectNameChanged(void* ptr);
void* QObject_Parent(void* ptr);
void* QObject_Property(void* ptr, char* name);
void QObject_TimerEvent(void* ptr, void* event);
void QObject_TimerEventDefault(void* ptr, void* event);
struct QtCore_PackedString QObject_QObject_Tr(char* sourceText, char* disambiguation, int n);
void QObject_DestroyQObject(void* ptr);
void QObject_DestroyQObjectDefault(void* ptr);
void* QObject_ToVariant(void* ptr);
void* QObject___children_atList(void* ptr, int i);
void QObject___children_setList(void* ptr, void* i);
void* QObject___children_newList(void* ptr);
void* QObject___dynamicPropertyNames_atList(void* ptr, int i);
void QObject___dynamicPropertyNames_setList(void* ptr, void* i);
void* QObject___dynamicPropertyNames_newList(void* ptr);
void* QObject___findChildren_atList(void* ptr, int i);
void QObject___findChildren_setList(void* ptr, void* i);
void* QObject___findChildren_newList(void* ptr);
void* QObject___findChildren_atList2(void* ptr, int i);
void QObject___findChildren_setList2(void* ptr, void* i);
void* QObject___findChildren_newList2(void* ptr);
void* QObject___findChildren_atList3(void* ptr, int i);
void QObject___findChildren_setList3(void* ptr, void* i);
void* QObject___findChildren_newList3(void* ptr);
void* QObject___qFindChildren_atList(void* ptr, int i);
void QObject___qFindChildren_setList(void* ptr, void* i);
void* QObject___qFindChildren_newList(void* ptr);
void* QObject___qFindChildren_atList2(void* ptr, int i);
void QObject___qFindChildren_setList2(void* ptr, void* i);
void* QObject___qFindChildren_newList2(void* ptr);
void* QPersistentModelIndex_NewQPersistentModelIndex2(void* index);
void* QPersistentModelIndex_NewQPersistentModelIndex3(void* other);
void* QPersistentModelIndex_NewQPersistentModelIndex4(void* other);
int QPersistentModelIndex_Column(void* ptr);
void* QPersistentModelIndex_Data(void* ptr, int role);
long long QPersistentModelIndex_Flags(void* ptr);
void* QPersistentModelIndex_Model(void* ptr);
void* QPersistentModelIndex_Parent(void* ptr);
int QPersistentModelIndex_Row(void* ptr);
void* QPersistentModelIndex_Sibling(void* ptr, int row, int column);
void* QPoint_NewQPoint();
void* QPoint_NewQPoint2(int xpos, int ypos);
int QPoint_X(void* ptr);
int QPoint_Y(void* ptr);
void* QPointF_NewQPointF();
void* QPointF_NewQPointF2(void* point);
void* QPointF_NewQPointF3(double xpos, double ypos);
double QPointF_X(void* ptr);
double QPointF_Y(void* ptr);
void* QRect_NewQRect();
void* QRect_NewQRect2(void* topLeft, void* bottomRight);
void* QRect_NewQRect3(void* topLeft, void* size);
void* QRect_NewQRect4(int x, int y, int width, int height);
char QRect_Contains(void* ptr, void* point, char proper);
char QRect_Contains2(void* ptr, void* rectangle, char proper);
char QRect_Contains3(void* ptr, int x, int y);
char QRect_Contains4(void* ptr, int x, int y, char proper);
int QRect_Height(void* ptr);
int QRect_Left(void* ptr);
int QRect_Right(void* ptr);
void QRect_SetHeight(void* ptr, int height);
void* QRect_Size(void* ptr);
int QRect_Top(void* ptr);
int QRect_Width(void* ptr);
int QRect_X(void* ptr);
int QRect_Y(void* ptr);
void* QRectF_NewQRectF();
void* QRectF_NewQRectF2(void* topLeft, void* size);
void* QRectF_NewQRectF3(void* topLeft, void* bottomRight);
void* QRectF_NewQRectF4(double x, double y, double width, double height);
void* QRectF_NewQRectF5(void* rectangle);
char QRectF_Contains(void* ptr, void* point);
char QRectF_Contains2(void* ptr, void* rectangle);
char QRectF_Contains3(void* ptr, double x, double y);
double QRectF_Height(void* ptr);
double QRectF_Left(void* ptr);
double QRectF_Right(void* ptr);
void QRectF_SetHeight(void* ptr, double height);
void* QRectF_Size(void* ptr);
double QRectF_Top(void* ptr);
double QRectF_Width(void* ptr);
double QRectF_X(void* ptr);
double QRectF_Y(void* ptr);
void* QRegExp_NewQRegExp();
void* QRegExp_NewQRegExp2(struct QtCore_PackedString pattern, long long cs, long long syntax);
void* QRegExp_NewQRegExp3(void* rx);
long long QRegExp_CaseSensitivity(void* ptr);
void QRegExp_DestroyQRegExp(void* ptr);
void* QRegularExpression_NewQRegularExpression();
void* QRegularExpression_NewQRegularExpression2(struct QtCore_PackedString pattern, long long options);
void* QRegularExpression_NewQRegularExpression3(void* re);
void* QRegularExpression_Match(void* ptr, struct QtCore_PackedString subject, int offset, long long matchType, long long matchOptions);
void* QRegularExpression_Match2(void* ptr, void* subjectRef, int offset, long long matchType, long long matchOptions);
void QRegularExpression_DestroyQRegularExpression(void* ptr);
void* QRegularExpressionMatch_NewQRegularExpressionMatch();
void* QRegularExpressionMatch_NewQRegularExpressionMatch2(void* match);
void QRegularExpressionMatch_DestroyQRegularExpressionMatch(void* ptr);
void* QSize_NewQSize();
void* QSize_NewQSize2(int width, int height);
int QSize_Height(void* ptr);
void QSize_Scale(void* ptr, int width, int height, long long mode);
void QSize_Scale2(void* ptr, void* size, long long mode);
void QSize_SetHeight(void* ptr, int height);
int QSize_Width(void* ptr);
void* QSizeF_NewQSizeF();
void* QSizeF_NewQSizeF2(void* size);
void* QSizeF_NewQSizeF3(double width, double height);
double QSizeF_Height(void* ptr);
void QSizeF_Scale(void* ptr, double width, double height, long long mode);
void QSizeF_Scale2(void* ptr, void* size, long long mode);
void QSizeF_SetHeight(void* ptr, double height);
double QSizeF_Width(void* ptr);
void* QSortFilterProxyModel_NewQSortFilterProxyModel(void* parent);
int QSortFilterProxyModel_ColumnCount(void* ptr, void* parent);
int QSortFilterProxyModel_ColumnCountDefault(void* ptr, void* parent);
long long QSortFilterProxyModel_FilterCaseSensitivity(void* ptr);
int QSortFilterProxyModel_FilterKeyColumn(void* ptr);
void* QSortFilterProxyModel_Index(void* ptr, int row, int column, void* parent);
void* QSortFilterProxyModel_IndexDefault(void* ptr, int row, int column, void* parent);
void* QSortFilterProxyModel_Parent(void* ptr, void* child);
void* QSortFilterProxyModel_ParentDefault(void* ptr, void* child);
int QSortFilterProxyModel_RowCount(void* ptr, void* parent);
int QSortFilterProxyModel_RowCountDefault(void* ptr, void* parent);
void QSortFilterProxyModel_SetFilterCaseSensitivity(void* ptr, long long cs);
void QSortFilterProxyModel_SetFilterFixedString(void* ptr, struct QtCore_PackedString pattern);
void QSortFilterProxyModel_SetFilterFixedStringDefault(void* ptr, struct QtCore_PackedString pattern);
void QSortFilterProxyModel_SetFilterKeyColumn(void* ptr, int column);
long long QSortFilterProxyModel_SortOrder(void* ptr);
void QSortFilterProxyModel_DestroyQSortFilterProxyModel(void* ptr);
void QSortFilterProxyModel_DestroyQSortFilterProxyModelDefault(void* ptr);
void* QSortFilterProxyModel_MapFromSource(void* ptr, void* sourceIndex);
void* QSortFilterProxyModel_MapFromSourceDefault(void* ptr, void* sourceIndex);
void* QSortFilterProxyModel_MapToSource(void* ptr, void* proxyIndex);
void* QSortFilterProxyModel_MapToSourceDefault(void* ptr, void* proxyIndex);
void* QStringRef_NewQStringRef();
void* QStringRef_NewQStringRef2(struct QtCore_PackedString stri, int position, int length);
void* QStringRef_NewQStringRef3(struct QtCore_PackedString stri);
void* QStringRef_NewQStringRef4(void* other);
void* QStringRef_At(void* ptr, int position);
void* QStringRef_Back(void* ptr);
char QStringRef_Contains(void* ptr, struct QtCore_PackedString str, long long cs);
char QStringRef_Contains2(void* ptr, void* ch, long long cs);
char QStringRef_Contains3(void* ptr, void* str, long long cs);
char QStringRef_Contains4(void* ptr, void* str, long long cs);
int QStringRef_Count(void* ptr);
int QStringRef_Count2(void* ptr, struct QtCore_PackedString str, long long cs);
int QStringRef_Count3(void* ptr, void* ch, long long cs);
int QStringRef_Count4(void* ptr, void* str, long long cs);
void* QStringRef_Data(void* ptr);
void* QStringRef_Left(void* ptr, int n);
void* QStringRef_Right(void* ptr, int n);
int QStringRef_Size(void* ptr);
struct QtCore_PackedList QStringRef_Split(void* ptr, struct QtCore_PackedString sep, long long behavior, long long cs);
struct QtCore_PackedList QStringRef_Split2(void* ptr, void* sep, long long behavior, long long cs);
struct QtCore_PackedString QStringRef_String(void* ptr);
int QStringRef_ToInt(void* ptr, char* ok, int base);
void QStringRef_DestroyQStringRef(void* ptr);
void* QStringRef___split_atList(void* ptr, int i);
void QStringRef___split_setList(void* ptr, void* i);
void* QStringRef___split_newList(void* ptr);
void* QStringRef___split_atList2(void* ptr, int i);
void QStringRef___split_setList2(void* ptr, void* i);
void* QStringRef___split_newList2(void* ptr);
unsigned int QStringRef___toUcs4_atList(void* ptr, int i);
void QStringRef___toUcs4_setList(void* ptr, unsigned int i);
void* QStringRef___toUcs4_newList(void* ptr);
void* QStringView_NewQStringView();
void* QStringView_NewQStringView7(struct QtCore_PackedString str);
void* QStringView_NewQStringView8(void* str);
void* QStringView_Back(void* ptr);
unsigned int QStringView___convertToUcs4_atList(void* ptr, int i);
void QStringView___convertToUcs4_setList(void* ptr, unsigned int i);
void* QStringView___convertToUcs4_newList(void* ptr);
unsigned int QStringView___toUcs4_atList(void* ptr, int i);
void QStringView___toUcs4_setList(void* ptr, unsigned int i);
void* QStringView___toUcs4_newList(void* ptr);
int QSysInfo_WordSize_Type();
void* QTime_NewQTime2();
void* QTime_NewQTime3(int h, int m, int s, int ms);
int QTime_Minute(void* ptr);
int QTime_Second(void* ptr);
void QTime_Start(void* ptr);
void* QTimeZone_NewQTimeZone();
void* QTimeZone_NewQTimeZone2(void* ianaId);
void* QTimeZone_NewQTimeZone3(int offsetSeconds);
void* QTimeZone_NewQTimeZone4(void* ianaId, int offsetSeconds, struct QtCore_PackedString name, struct QtCore_PackedString abbreviation, long long country, struct QtCore_PackedString comment);
void* QTimeZone_NewQTimeZone5(void* other);
void QTimeZone_DestroyQTimeZone(void* ptr);
void* QTimeZone___availableTimeZoneIds_atList(void* ptr, int i);
void QTimeZone___availableTimeZoneIds_setList(void* ptr, void* i);
void* QTimeZone___availableTimeZoneIds_newList(void* ptr);
void* QTimeZone___availableTimeZoneIds_atList2(void* ptr, int i);
void QTimeZone___availableTimeZoneIds_setList2(void* ptr, void* i);
void* QTimeZone___availableTimeZoneIds_newList2(void* ptr);
void* QTimeZone___availableTimeZoneIds_atList3(void* ptr, int i);
void QTimeZone___availableTimeZoneIds_setList3(void* ptr, void* i);
void* QTimeZone___availableTimeZoneIds_newList3(void* ptr);
void* QTimeZone___windowsIdToIanaIds_atList(void* ptr, int i);
void QTimeZone___windowsIdToIanaIds_setList(void* ptr, void* i);
void* QTimeZone___windowsIdToIanaIds_newList(void* ptr);
void* QTimeZone___windowsIdToIanaIds_atList2(void* ptr, int i);
void QTimeZone___windowsIdToIanaIds_setList2(void* ptr, void* i);
void* QTimeZone___windowsIdToIanaIds_newList2(void* ptr);
void* QTimer_NewQTimer(void* parent);
void QTimer_Start(void* ptr, int msec);
void QTimer_StartDefault(void* ptr, int msec);
void QTimer_Start2(void* ptr);
void QTimer_Start2Default(void* ptr);
void QTimer_DestroyQTimer(void* ptr);
void QTimer_DestroyQTimerDefault(void* ptr);
void* QTimerEvent_NewQTimerEvent(int timerId);
void* QUrl_NewQUrl();
void* QUrl_NewQUrl2(void* other);
void* QUrl_NewQUrl3(struct QtCore_PackedString url, long long parsingMode);
void* QUrl_NewQUrl4(void* other);
struct QtCore_PackedString QUrl_FileName(void* ptr, long long options);
void* QUrl_QUrl_FromLocalFile(struct QtCore_PackedString localFile);
struct QtCore_PackedString QUrl_Path(void* ptr, long long options);
struct QtCore_PackedString QUrl_Query(void* ptr, long long options);
struct QtCore_PackedString QUrl_Url(void* ptr, long long options);
void QUrl_DestroyQUrl(void* ptr);
void* QUrl___allEncodedQueryItemValues_atList(void* ptr, int i);
void QUrl___allEncodedQueryItemValues_setList(void* ptr, void* i);
void* QUrl___allEncodedQueryItemValues_newList(void* ptr);
void* QUrl___fromStringList_atList(void* ptr, int i);
void QUrl___fromStringList_setList(void* ptr, void* i);
void* QUrl___fromStringList_newList(void* ptr);
void* QUrl___toStringList_urls_atList(void* ptr, int i);
void QUrl___toStringList_urls_setList(void* ptr, void* i);
void* QUrl___toStringList_urls_newList(void* ptr);
void* QUuid_NewQUuid2();
void* QUuid_NewQUuid3(unsigned int l, unsigned short w1, unsigned short w2, char* b1, char* b2, char* b3, char* b4, char* b5, char* b6, char* b7, char* b8);
void* QUuid_NewQUuid4(struct QtCore_PackedString text);
void* QUuid_NewQUuid(void* text);
long long QUuid_Variant(void* ptr);
void* QVariant_NewQVariant();
void* QVariant_NewQVariant2(long long ty);
void* QVariant_NewQVariant3(int typeId, void* copy);
void* QVariant_NewQVariant4(void* s);
void* QVariant_NewQVariant5(int val);
void* QVariant_NewQVariant6(unsigned int val);
void* QVariant_NewQVariant7(long long val);
void* QVariant_NewQVariant8(unsigned long long val);
void* QVariant_NewQVariant9(char val);
void* QVariant_NewQVariant10(double val);
void* QVariant_NewQVariant11(float val);
void* QVariant_NewQVariant12(char* val);
void* QVariant_NewQVariant13(void* val);
void* QVariant_NewQVariant14(void* val);
void* QVariant_NewQVariant15(struct QtCore_PackedString val);
void* QVariant_NewQVariant16(void* val);
void* QVariant_NewQVariant17(struct QtCore_PackedString val);
void* QVariant_NewQVariant18(void* c);
void* QVariant_NewQVariant19(void* val);
void* QVariant_NewQVariant20(void* val);
void* QVariant_NewQVariant21(void* val);
void* QVariant_NewQVariant22(void* val);
void* QVariant_NewQVariant23(void* val);
void* QVariant_NewQVariant24(void* val);
void* QVariant_NewQVariant25(void* val);
void* QVariant_NewQVariant26(void* val);
void* QVariant_NewQVariant27(void* val);
void* QVariant_NewQVariant28(void* val);
void* QVariant_NewQVariant29(void* val);
void* QVariant_NewQVariant30(void* val);
void* QVariant_NewQVariant31(void* val);
void* QVariant_NewQVariant32(void* val);
void* QVariant_NewQVariant33(void* l);
void* QVariant_NewQVariant34(void* regExp);
void* QVariant_NewQVariant35(void* re);
void* QVariant_NewQVariant36(void* val);
void* QVariant_NewQVariant37(void* val);
void* QVariant_NewQVariant38(void* val);
void* QVariant_NewQVariant39(void* val);
void* QVariant_NewQVariant40(void* val);
void* QVariant_NewQVariant41(void* val);
void* QVariant_NewQVariant42(void* val);
void* QVariant_NewQVariant43(void* val);
void* QVariant_NewQVariant44(void* val);
void* QVariant_NewQVariant45(void* other);
char QVariant_ToBool(void* ptr);
double QVariant_ToDouble(void* ptr, char* ok);
struct QtCore_PackedList QVariant_ToHash(void* ptr);
int QVariant_ToInt(void* ptr, char* ok);
struct QtCore_PackedList QVariant_ToList(void* ptr);
long long QVariant_ToLongLong(void* ptr, char* ok);
struct QtCore_PackedList QVariant_ToMap(void* ptr);
struct QtCore_PackedString QVariant_ToString(void* ptr);
struct QtCore_PackedString QVariant_ToStringList(void* ptr);
unsigned int QVariant_ToUInt(void* ptr, char* ok);
unsigned long long QVariant_ToULongLong(void* ptr, char* ok);
long long QVariant_Type(void* ptr);
void QVariant_DestroyQVariant(void* ptr);
void* QVariant___QVariant_val_atList22(void* ptr, int i);
void QVariant___QVariant_val_setList22(void* ptr, void* i);
void* QVariant___QVariant_val_newList22(void* ptr);
void* QVariant___QVariant_val_atList23(void* ptr, struct QtCore_PackedString v, int i);
void QVariant___QVariant_val_setList23(void* ptr, struct QtCore_PackedString key, void* i);
void* QVariant___QVariant_val_newList23(void* ptr);
struct QtCore_PackedList QVariant___QVariant_val_keyList23(void* ptr);
void* QVariant___QVariant_val_atList24(void* ptr, struct QtCore_PackedString v, int i);
void QVariant___QVariant_val_setList24(void* ptr, struct QtCore_PackedString key, void* i);
void* QVariant___QVariant_val_newList24(void* ptr);
struct QtCore_PackedList QVariant___QVariant_val_keyList24(void* ptr);
void* QVariant___toHash_atList(void* ptr, struct QtCore_PackedString v, int i);
void QVariant___toHash_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QVariant___toHash_newList(void* ptr);
struct QtCore_PackedList QVariant___toHash_keyList(void* ptr);
void* QVariant___toList_atList(void* ptr, int i);
void QVariant___toList_setList(void* ptr, void* i);
void* QVariant___toList_newList(void* ptr);
void* QVariant___toMap_atList(void* ptr, struct QtCore_PackedString v, int i);
void QVariant___toMap_setList(void* ptr, struct QtCore_PackedString key, void* i);
void* QVariant___toMap_newList(void* ptr);
struct QtCore_PackedList QVariant___toMap_keyList(void* ptr);
struct QtCore_PackedString QVariant_____QVariant_val_keyList_atList23(void* ptr, int i);
void QVariant_____QVariant_val_keyList_setList23(void* ptr, struct QtCore_PackedString i);
void* QVariant_____QVariant_val_keyList_newList23(void* ptr);
struct QtCore_PackedString QVariant_____QVariant_val_keyList_atList24(void* ptr, int i);
void QVariant_____QVariant_val_keyList_setList24(void* ptr, struct QtCore_PackedString i);
void* QVariant_____QVariant_val_keyList_newList24(void* ptr);
struct QtCore_PackedString QVariant_____toHash_keyList_atList(void* ptr, int i);
void QVariant_____toHash_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QVariant_____toHash_keyList_newList(void* ptr);
struct QtCore_PackedString QVariant_____toMap_keyList_atList(void* ptr, int i);
void QVariant_____toMap_keyList_setList(void* ptr, struct QtCore_PackedString i);
void* QVariant_____toMap_keyList_newList(void* ptr);
int Qt_LastGestureType_Type();

#ifdef __cplusplus
}
#endif

#endif