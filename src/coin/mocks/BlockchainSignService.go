// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import core "github.com/fibercrypto/FiberCryptoWallet/src/core"
import mock "github.com/stretchr/testify/mock"

// BlockchainSignService is an autogenerated mock type for the BlockchainSignService type
type BlockchainSignService struct {
	mock.Mock
}

// Sign provides a mock function with given fields: txn, signSpec, pwd
func (_m *BlockchainSignService) Sign(txn core.Transaction, signSpec []core.InputSignDescriptor, pwd core.PasswordReader) (core.Transaction, error) {
	ret := _m.Called(txn, signSpec, pwd)

	var r0 core.Transaction
	if rf, ok := ret.Get(0).(func(core.Transaction, []core.InputSignDescriptor, core.PasswordReader) core.Transaction); ok {
		r0 = rf(txn, signSpec, pwd)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(core.Transaction, []core.InputSignDescriptor, core.PasswordReader) error); ok {
		r1 = rf(txn, signSpec, pwd)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
