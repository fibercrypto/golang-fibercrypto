

#pragma once

#ifndef GO_MOC_580e15_H
#define GO_MOC_580e15_H

#include <stdint.h>

#ifdef __cplusplus
class QConnection580e15;
void QConnection580e15_QConnection580e15_QRegisterMetaTypes();
class networkingModel580e15;
void networkingModel580e15_networkingModel580e15_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
struct Moc_PackedString QConnection580e15_Peer(void* ptr);
struct Moc_PackedString QConnection580e15_PeerDefault(void* ptr);
void QConnection580e15_SetPeer(void* ptr, struct Moc_PackedString peer);
void QConnection580e15_SetPeerDefault(void* ptr, struct Moc_PackedString peer);
void QConnection580e15_ConnectPeerChanged(void* ptr);
void QConnection580e15_DisconnectPeerChanged(void* ptr);
void QConnection580e15_PeerChanged(void* ptr, struct Moc_PackedString peer);
struct Moc_PackedString QConnection580e15_Source(void* ptr);
struct Moc_PackedString QConnection580e15_SourceDefault(void* ptr);
void QConnection580e15_SetSource(void* ptr, struct Moc_PackedString source);
void QConnection580e15_SetSourceDefault(void* ptr, struct Moc_PackedString source);
void QConnection580e15_ConnectSourceChanged(void* ptr);
void QConnection580e15_DisconnectSourceChanged(void* ptr);
void QConnection580e15_SourceChanged(void* ptr, struct Moc_PackedString source);
unsigned long long QConnection580e15_BlockHeight(void* ptr);
unsigned long long QConnection580e15_BlockHeightDefault(void* ptr);
void QConnection580e15_SetBlockHeight(void* ptr, unsigned long long blockHeight);
void QConnection580e15_SetBlockHeightDefault(void* ptr, unsigned long long blockHeight);
void QConnection580e15_ConnectBlockHeightChanged(void* ptr);
void QConnection580e15_DisconnectBlockHeightChanged(void* ptr);
void QConnection580e15_BlockHeightChanged(void* ptr, unsigned long long blockHeight);
long long QConnection580e15_LastSeen(void* ptr);
long long QConnection580e15_LastSeenDefault(void* ptr);
void QConnection580e15_SetLastSeen(void* ptr, long long lastSeen);
void QConnection580e15_SetLastSeenDefault(void* ptr, long long lastSeen);
void QConnection580e15_ConnectLastSeenChanged(void* ptr);
void QConnection580e15_DisconnectLastSeenChanged(void* ptr);
void QConnection580e15_LastSeenChanged(void* ptr, long long lastSeen);
int QConnection580e15_QConnection580e15_QRegisterMetaType();
int QConnection580e15_QConnection580e15_QRegisterMetaType2(char* typeName);
int QConnection580e15_QConnection580e15_QmlRegisterType();
int QConnection580e15_QConnection580e15_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* QConnection580e15___children_atList(void* ptr, int i);
void QConnection580e15___children_setList(void* ptr, void* i);
void* QConnection580e15___children_newList(void* ptr);
void* QConnection580e15___dynamicPropertyNames_atList(void* ptr, int i);
void QConnection580e15___dynamicPropertyNames_setList(void* ptr, void* i);
void* QConnection580e15___dynamicPropertyNames_newList(void* ptr);
void* QConnection580e15___findChildren_atList(void* ptr, int i);
void QConnection580e15___findChildren_setList(void* ptr, void* i);
void* QConnection580e15___findChildren_newList(void* ptr);
void* QConnection580e15___findChildren_atList3(void* ptr, int i);
void QConnection580e15___findChildren_setList3(void* ptr, void* i);
void* QConnection580e15___findChildren_newList3(void* ptr);
void* QConnection580e15___qFindChildren_atList2(void* ptr, int i);
void QConnection580e15___qFindChildren_setList2(void* ptr, void* i);
void* QConnection580e15___qFindChildren_newList2(void* ptr);
void* QConnection580e15_NewQConnection(void* parent);
void QConnection580e15_DestroyQConnection(void* ptr);
void QConnection580e15_DestroyQConnectionDefault(void* ptr);
void QConnection580e15_ChildEventDefault(void* ptr, void* event);
void QConnection580e15_ConnectNotifyDefault(void* ptr, void* sign);
void QConnection580e15_CustomEventDefault(void* ptr, void* event);
void QConnection580e15_DeleteLaterDefault(void* ptr);
void QConnection580e15_DisconnectNotifyDefault(void* ptr, void* sign);
char QConnection580e15_EventDefault(void* ptr, void* e);
char QConnection580e15_EventFilterDefault(void* ptr, void* watched, void* event);
void QConnection580e15_TimerEventDefault(void* ptr, void* event);
struct Moc_PackedList networkingModel580e15_Roles(void* ptr);
struct Moc_PackedList networkingModel580e15_RolesDefault(void* ptr);
void networkingModel580e15_SetRoles(void* ptr, void* roles);
void networkingModel580e15_SetRolesDefault(void* ptr, void* roles);
void networkingModel580e15_ConnectRolesChanged(void* ptr);
void networkingModel580e15_DisconnectRolesChanged(void* ptr);
void networkingModel580e15_RolesChanged(void* ptr, void* roles);
struct Moc_PackedList networkingModel580e15_Connections(void* ptr);
struct Moc_PackedList networkingModel580e15_ConnectionsDefault(void* ptr);
void networkingModel580e15_SetConnections(void* ptr, void* connections);
void networkingModel580e15_SetConnectionsDefault(void* ptr, void* connections);
void networkingModel580e15_ConnectConnectionsChanged(void* ptr);
void networkingModel580e15_DisconnectConnectionsChanged(void* ptr);
void networkingModel580e15_ConnectionsChanged(void* ptr, void* connections);
int networkingModel580e15_networkingModel580e15_QRegisterMetaType();
int networkingModel580e15_networkingModel580e15_QRegisterMetaType2(char* typeName);
int networkingModel580e15_networkingModel580e15_QmlRegisterType();
int networkingModel580e15_networkingModel580e15_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int networkingModel580e15_____itemData_keyList_atList(void* ptr, int i);
void networkingModel580e15_____itemData_keyList_setList(void* ptr, int i);
void* networkingModel580e15_____itemData_keyList_newList(void* ptr);
int networkingModel580e15_____roleNames_keyList_atList(void* ptr, int i);
void networkingModel580e15_____roleNames_keyList_setList(void* ptr, int i);
void* networkingModel580e15_____roleNames_keyList_newList(void* ptr);
int networkingModel580e15_____setItemData_roles_keyList_atList(void* ptr, int i);
void networkingModel580e15_____setItemData_roles_keyList_setList(void* ptr, int i);
void* networkingModel580e15_____setItemData_roles_keyList_newList(void* ptr);
void* networkingModel580e15___changePersistentIndexList_from_atList(void* ptr, int i);
void networkingModel580e15___changePersistentIndexList_from_setList(void* ptr, void* i);
void* networkingModel580e15___changePersistentIndexList_from_newList(void* ptr);
void* networkingModel580e15___changePersistentIndexList_to_atList(void* ptr, int i);
void networkingModel580e15___changePersistentIndexList_to_setList(void* ptr, void* i);
void* networkingModel580e15___changePersistentIndexList_to_newList(void* ptr);
int networkingModel580e15___dataChanged_roles_atList(void* ptr, int i);
void networkingModel580e15___dataChanged_roles_setList(void* ptr, int i);
void* networkingModel580e15___dataChanged_roles_newList(void* ptr);
void* networkingModel580e15___itemData_atList(void* ptr, int v, int i);
void networkingModel580e15___itemData_setList(void* ptr, int key, void* i);
void* networkingModel580e15___itemData_newList(void* ptr);
struct Moc_PackedList networkingModel580e15___itemData_keyList(void* ptr);
void* networkingModel580e15___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void networkingModel580e15___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* networkingModel580e15___layoutAboutToBeChanged_parents_newList(void* ptr);
void* networkingModel580e15___layoutChanged_parents_atList(void* ptr, int i);
void networkingModel580e15___layoutChanged_parents_setList(void* ptr, void* i);
void* networkingModel580e15___layoutChanged_parents_newList(void* ptr);
void* networkingModel580e15___match_atList(void* ptr, int i);
void networkingModel580e15___match_setList(void* ptr, void* i);
void* networkingModel580e15___match_newList(void* ptr);
void* networkingModel580e15___mimeData_indexes_atList(void* ptr, int i);
void networkingModel580e15___mimeData_indexes_setList(void* ptr, void* i);
void* networkingModel580e15___mimeData_indexes_newList(void* ptr);
void* networkingModel580e15___persistentIndexList_atList(void* ptr, int i);
void networkingModel580e15___persistentIndexList_setList(void* ptr, void* i);
void* networkingModel580e15___persistentIndexList_newList(void* ptr);
void* networkingModel580e15___roleNames_atList(void* ptr, int v, int i);
void networkingModel580e15___roleNames_setList(void* ptr, int key, void* i);
void* networkingModel580e15___roleNames_newList(void* ptr);
struct Moc_PackedList networkingModel580e15___roleNames_keyList(void* ptr);
void* networkingModel580e15___setItemData_roles_atList(void* ptr, int v, int i);
void networkingModel580e15___setItemData_roles_setList(void* ptr, int key, void* i);
void* networkingModel580e15___setItemData_roles_newList(void* ptr);
struct Moc_PackedList networkingModel580e15___setItemData_roles_keyList(void* ptr);
int networkingModel580e15_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void networkingModel580e15_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* networkingModel580e15_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int networkingModel580e15_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void networkingModel580e15_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* networkingModel580e15_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* networkingModel580e15___children_atList(void* ptr, int i);
void networkingModel580e15___children_setList(void* ptr, void* i);
void* networkingModel580e15___children_newList(void* ptr);
void* networkingModel580e15___dynamicPropertyNames_atList(void* ptr, int i);
void networkingModel580e15___dynamicPropertyNames_setList(void* ptr, void* i);
void* networkingModel580e15___dynamicPropertyNames_newList(void* ptr);
void* networkingModel580e15___findChildren_atList(void* ptr, int i);
void networkingModel580e15___findChildren_setList(void* ptr, void* i);
void* networkingModel580e15___findChildren_newList(void* ptr);
void* networkingModel580e15___findChildren_atList3(void* ptr, int i);
void networkingModel580e15___findChildren_setList3(void* ptr, void* i);
void* networkingModel580e15___findChildren_newList3(void* ptr);
void* networkingModel580e15___qFindChildren_atList2(void* ptr, int i);
void networkingModel580e15___qFindChildren_setList2(void* ptr, void* i);
void* networkingModel580e15___qFindChildren_newList2(void* ptr);
void* networkingModel580e15___roles_atList(void* ptr, int v, int i);
void networkingModel580e15___roles_setList(void* ptr, int key, void* i);
void* networkingModel580e15___roles_newList(void* ptr);
struct Moc_PackedList networkingModel580e15___roles_keyList(void* ptr);
void* networkingModel580e15___setRoles_roles_atList(void* ptr, int v, int i);
void networkingModel580e15___setRoles_roles_setList(void* ptr, int key, void* i);
void* networkingModel580e15___setRoles_roles_newList(void* ptr);
struct Moc_PackedList networkingModel580e15___setRoles_roles_keyList(void* ptr);
void* networkingModel580e15___rolesChanged_roles_atList(void* ptr, int v, int i);
void networkingModel580e15___rolesChanged_roles_setList(void* ptr, int key, void* i);
void* networkingModel580e15___rolesChanged_roles_newList(void* ptr);
struct Moc_PackedList networkingModel580e15___rolesChanged_roles_keyList(void* ptr);
void* networkingModel580e15___connections_atList(void* ptr, int i);
void networkingModel580e15___connections_setList(void* ptr, void* i);
void* networkingModel580e15___connections_newList(void* ptr);
void* networkingModel580e15___setConnections_connections_atList(void* ptr, int i);
void networkingModel580e15___setConnections_connections_setList(void* ptr, void* i);
void* networkingModel580e15___setConnections_connections_newList(void* ptr);
void* networkingModel580e15___connectionsChanged_connections_atList(void* ptr, int i);
void networkingModel580e15___connectionsChanged_connections_setList(void* ptr, void* i);
void* networkingModel580e15___connectionsChanged_connections_newList(void* ptr);
int networkingModel580e15_____roles_keyList_atList(void* ptr, int i);
void networkingModel580e15_____roles_keyList_setList(void* ptr, int i);
void* networkingModel580e15_____roles_keyList_newList(void* ptr);
int networkingModel580e15_____setRoles_roles_keyList_atList(void* ptr, int i);
void networkingModel580e15_____setRoles_roles_keyList_setList(void* ptr, int i);
void* networkingModel580e15_____setRoles_roles_keyList_newList(void* ptr);
int networkingModel580e15_____rolesChanged_roles_keyList_atList(void* ptr, int i);
void networkingModel580e15_____rolesChanged_roles_keyList_setList(void* ptr, int i);
void* networkingModel580e15_____rolesChanged_roles_keyList_newList(void* ptr);
void* networkingModel580e15_NewNetworkingModel(void* parent);
void networkingModel580e15_DestroyNetworkingModel(void* ptr);
void networkingModel580e15_DestroyNetworkingModelDefault(void* ptr);
char networkingModel580e15_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long networkingModel580e15_FlagsDefault(void* ptr, void* index);
void* networkingModel580e15_IndexDefault(void* ptr, int row, int column, void* parent);
void* networkingModel580e15_SiblingDefault(void* ptr, int row, int column, void* idx);
void* networkingModel580e15_BuddyDefault(void* ptr, void* index);
char networkingModel580e15_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char networkingModel580e15_CanFetchMoreDefault(void* ptr, void* parent);
int networkingModel580e15_ColumnCountDefault(void* ptr, void* parent);
void* networkingModel580e15_DataDefault(void* ptr, void* index, int role);
void networkingModel580e15_FetchMoreDefault(void* ptr, void* parent);
char networkingModel580e15_HasChildrenDefault(void* ptr, void* parent);
void* networkingModel580e15_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char networkingModel580e15_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char networkingModel580e15_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList networkingModel580e15_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList networkingModel580e15_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* networkingModel580e15_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString networkingModel580e15_MimeTypesDefault(void* ptr);
char networkingModel580e15_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char networkingModel580e15_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* networkingModel580e15_ParentDefault(void* ptr, void* index);
char networkingModel580e15_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char networkingModel580e15_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void networkingModel580e15_ResetInternalDataDefault(void* ptr);
void networkingModel580e15_RevertDefault(void* ptr);
struct Moc_PackedList networkingModel580e15_RoleNamesDefault(void* ptr);
int networkingModel580e15_RowCountDefault(void* ptr, void* parent);
char networkingModel580e15_SetDataDefault(void* ptr, void* index, void* value, int role);
char networkingModel580e15_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char networkingModel580e15_SetItemDataDefault(void* ptr, void* index, void* roles);
void networkingModel580e15_SortDefault(void* ptr, int column, long long order);
void* networkingModel580e15_SpanDefault(void* ptr, void* index);
char networkingModel580e15_SubmitDefault(void* ptr);
long long networkingModel580e15_SupportedDragActionsDefault(void* ptr);
long long networkingModel580e15_SupportedDropActionsDefault(void* ptr);
void networkingModel580e15_ChildEventDefault(void* ptr, void* event);
void networkingModel580e15_ConnectNotifyDefault(void* ptr, void* sign);
void networkingModel580e15_CustomEventDefault(void* ptr, void* event);
void networkingModel580e15_DeleteLaterDefault(void* ptr);
void networkingModel580e15_DisconnectNotifyDefault(void* ptr, void* sign);
char networkingModel580e15_EventDefault(void* ptr, void* e);
char networkingModel580e15_EventFilterDefault(void* ptr, void* watched, void* event);
void networkingModel580e15_TimerEventDefault(void* ptr, void* event);

#ifdef __cplusplus
}
#endif

#endif