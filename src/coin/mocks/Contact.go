// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import core "github.com/fibercrypto/fibercryptowallet/src/core"
import mock "github.com/stretchr/testify/mock"

// Contact is an autogenerated mock type for the Contact type
type Contact struct {
	mock.Mock
}

// GetAddresses provides a mock function with given fields:
func (_m *Contact) GetAddresses() []core.StringAddress {
	ret := _m.Called()

	var r0 []core.StringAddress
	if rf, ok := ret.Get(0).(func() []core.StringAddress); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]core.StringAddress)
		}
	}

	return r0
}

// GetID provides a mock function with given fields:
func (_m *Contact) GetID() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// GetName provides a mock function with given fields:
func (_m *Contact) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsValid provides a mock function with given fields:
func (_m *Contact) IsValid() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// SetAddresses provides a mock function with given fields: _a0
func (_m *Contact) SetAddresses(_a0 []core.StringAddress) {
	_m.Called(_a0)
}

// SetID provides a mock function with given fields: id
func (_m *Contact) SetID(id uint64) {
	_m.Called(id)
}

// SetName provides a mock function with given fields: _a0
func (_m *Contact) SetName(_a0 string) {
	_m.Called(_a0)
}
